                  2   $LIST
0000              4   
0000              5   ;  N76E003 pinout:
0000              6   ;                               -------
0000              7   ;       PWM2/IC6/T0/AIN4/P0.5 -|1    20|- P0.4/AIN5/STADC/PWM3/IC3
0000              8   ;               TXD/AIN3/P0.6 -|2    19|- P0.3/PWM5/IC5/AIN6
0000              9   ;               RXD/AIN2/P0.7 -|3    18|- P0.2/ICPCK/OCDCK/RXD_1/[SCL]
0000             10   ;                    RST/P2.0 -|4    17|- P0.1/PWM4/IC4/MISO
0000             11   ;        INT0/OSCIN/AIN1/P3.0 -|5    16|- P0.0/PWM3/IC3/MOSI/T1
0000             12   ;              INT1/AIN0/P1.7 -|6    15|- P1.0/PWM2/IC2/SPCLK
0000             13   ;                         GND -|7    14|- P1.1/PWM1/IC1/AIN7/CLO
0000             14   ;[SDA]/TXD_1/ICPDA/OCDDA/P1.6 -|8    13|- P1.2/PWM0/IC0
0000             15   ;                         VDD -|9    12|- P1.3/SCL/[STADC]
0000             16   ;            PWM5/IC7/SS/P1.5 -|10   11|- P1.4/SDA/FB/PWM1
0000             17   ;                               -------
0000             18   ;
0000             19   ; 2 3 4 7 9 19 18 17 16 12 11 15 10 6 5 14
0000             20   ;-------------------;
0000             21   ; Clock Frequencies ;
0000             22   ;-------------------;
0000             23   
0000             24   CLK               EQU 16600000 ; Microcontroller System Frequency in Hz
0000             25   BAUD              EQU 115200 ; Baud Rate for UART in BPS
0000             26   
0000             27   TIMER0_RATE   EQU 4096     ; 2048Hz Squarewave (Peak Amplitude of CEM-1203 Speaker)
0000             28   TIMER0_RELOAD EQU ((65536-(CLK/TIMER0_RATE)))
0000             29   
0000             30   TIMER1_RELOAD     EQU (0X100 - (CLK / (16 * BAUD)))
0000             31   
0000             32   TIMER2_RATE       EQU 1000     ; 1000Hz, for a timer tick of 1ms
0000             33   TIMER2_RELOAD     EQU ((65536- (CLK/TIMER2_RATE)))
0000             34   
0000             35   
0000             36   ;-------------------;
0000             37   ;- Pin Definitions -;
0000             38   ;-------------------;
0000             39   
0000             40   ; ToDo : Button Multiplexer
0000             41   START_BUTTON       EQU P0.4 ; Pin 20
0000             42   MODE_BUTTON       EQU P0.3 ; Pin 19
0000             43   
0000             44   TENS_BUTTON_PLUS       EQU P1.3 ; Pin 12
0000             45   ONES_BUTTON_PLUS       EQU P0.0 ; Pin 16
0000             46   
0000             47   TENS_BUTTON_MINUS       EQU P0.1 ; Pin 17
0000             48   ONES_BUTTON_MINUS       EQU P0.2 ; Pin 18
0000             49   
0000             50   MX_PIN            EQU P1.6 ; Pin 8
0000             51   OUTPUT_PIN             EQU P1.5 ; Pin 10
0000             52   
0000             53   REF_ADC           EQU P1.7 ; Pin 6
0000             54   LM335_ADC                  EQU P3.0 ; Pin 5
0000             55   SPEAKER_OUT       EQU P0.5 ; Pin 1
0000             56   THERMOCOUPLE_ADC  EQU P1.1 ; Pin 14
0000             57   
0000             58   ; Reset vector
0000             59   ORG 0x0000
0000 020C32      60       LJMP Main
0003             61   
0003             62   ; External interrupt 0 vector (not used in this code)
0003             63   ORG 0x0003
0003             64   
0003 32          65            RETI
0004             66   
0004             67   ; Timer/Counter 0 overflow interrupt vector
000B             68   ORG 0x000B
000B 020A2A      69            ljmp Timer0_ISR
000E             70   
000E             71   ; External interrupt 1 vector (not used in this code)
0013             72   ORG 0x0013
0013 32          73            RETI
0014             74   
0014             75   ; Timer/Counter 1 overflow interrupt vector (not used in this code)
001B             76   ORG 0x001B
001B 32          77            RETI
001C             78   
001C             79   ; Serial port receive/transmit interrupt vector (not used in this code)
0023             80   ORG 0x0023
0023 32          81            RETI
0024             82   
0024             83   ; Timer/Counter 2 overflow interrupt vector
002B             84   ORG 0x002B
002B 020A3F      85            LJMP Timer2_ISR
002E             86   
002E             87   
002E             88   
002E             89   
0030             90   DSEG AT 0x30
0030             91   
0030             92   STATE_NUM:                 DS 1 ;
0031             93   
0031             94   Count1ms:             DS 2 ; Used to Determine When 1s Has Passed
0033             95   speaker_counter1ms:    ds 2
0035             96   speaker_counts:            ds 1 ;
0036             97   
0036             98   BCD_Counter:          DS 1 ; The BCD counter incremented in the ISR and displayed in the main loop
0037             99   Current_Counter:           DS 1 ;
0038            100   Resulting_Counter:         DS 1 ;
0039            101   
0039            102   Timer_State:          DS 1 ;
003A            103   Beep_Count:                        DS 1 ;
003B            104   Desired_PWM:               DS 2 ;
003D            105   
003D            106   ;------------------------;
003D            107   ;   Temperature Values   ;
003D            108   ;------------------------;
003D            109   
003D            110   TEMP_ERROR: DS 1
003E            111   TEMP_SOAK:  DS 1
003F            112   TEMP_REFLOW: DS 1
0040            113   
0040            114   TEMP_DONE EQU 60
0040            115   
0040            116   TX_SIZE  EQU 5 ; Size of the Transmit Buffer
0040            117   TX_BUFF: DS TX_SIZE ; Buffer for Transmit Characters
0045            118   
0045            119   X:   DS 4
0049            120   Y:   DS 4
004D            121   BCD: DS 5
0052            122   
0052            123   OVEN_BCD: DS 4
0056            124   
0056            125   Output_Voltage: DS 4
005A            126   VLED_ADC: DS 2
005C            127   
005C            128   LM335_TEMP: DS 4 ; 2 Byte Temperature Value With 0.01 Degree Resolution
0060            129   THERMOCOUPLE_TEMP: DS 4 ; 2 Byte Temperature Value With 0.01 Degree Resolution
0064            130   OVEN_TEMP: DS 1 ; 1 Byte Temperature Value With 1 Degree Resolution
0065            131   
0065            132   
0000            133   BSEG
0000            134   MF: DBIT 1
0001            135   
0001            136   Below_Temp_Flag: DBIT 1
0002            137   Error_Triggered_Flag: DBIT 1
0003            138   
0003            139   Speaker_En_Flag:   DBIT 1
0004            140   Reflow_Soak_Flag:   DBIT 1
0005            141   State_TX_Flag: DBIT 1
0006            142   
0006            143   Second_Flag:  DBIT 1
0007            144   Emergency_Flag:  DBIT 1
0008            145   
0008            146   SOAK_LESS_THAN_REFLOW_FLAG: DBIT 1
0009            147   
0009            148   BTP: dbit 1 ;Multiplex buttons
000A            149   BOP: dbit 1
000B            150   BTM: dbit 1
000C            151   BOM: dbit 1
000D            152   BMode: dbit 1
000E            153   Mode: dbit 1
000F            154   
000F            155   
012D             75   $LIST
                546   $LIST
0669            309   $LIST
0696             43   $LIST
                161   $LIST
0696            163   
0696 546F3D20   164   Initial_Message1:  db 'To= xxC  Tj=xxC ', 0
     78784320
     20546A3D
     78784320
     00
06A7 73787878   165   Initial_Message2:  db 'sxxx.00 rxxx.00 ', 0
     2E303020
     72787878
     2E303020
     00
06B8            166   
06B8            167   CSEG
06B8            168   
06B8 546F3D00   169   To_MSG: DB 'To=', 0
06BC 43202054   170   Tj_MSG: DB 'C  Tj=', 0
     6A3D00
06C3 20202020   171   ERROR_MSG: DB '     ERROR      ', 0
     20455252
     4F522020
     20202020
     00
06D4 20202020   172   TEMP_MSG: DB '     S > R      ', 0
     2053203E
     20522020
     20202020
     00
06E5 20202020   173   EMPTY_MSG: DB '                ', 0
     20202020
     20202020
     20202020
     00
06F6            174   
06F6            175   LCD_RS EQU P1.3 ; Pin 12
06F6            176   LCD_E  EQU P1.4 ; Pin 11
06F6            177   LCD_D4 EQU P0.0 ; Pin 16
06F6            178   LCD_D5 EQU P0.1 ; Pin 15
06F6            179   LCD_D6 EQU P0.2 ; Pin 18
06F6            180   LCD_D7 EQU P0.3 ; Pin 19
06F6            181   
06F6            182   soak_is_less_than_reflow:
06F6 E53F       183            mov a, TEMP_REFLOW
06F8 953E       184            subb a, TEMP_SOAK ; if REFLOW - SOAK = + we good
06FA 5005       185            jnc check_soak_is_less_than_reflow ;
06FC 753000     186            mov STATE_NUM, #0x00
06FF D208       187            setb SOAK_LESS_THAN_REFLOW_FLAG
0701            188   check_soak_is_less_than_reflow:
0701 22         189            ret
0702            190   
0702            191   Display_LCDFinal:
0702 120504     192            lcall Display_LM335_Temperature
0705 120544     193            lcall Display_Oven_Temperature
0708            194   
0708 C0E0       195            push acc
070A 7401       195            mov a, #1
070C 14         195            dec a
070D 1200C7     195            lcall ?Set_Cursor_1 ; Select column and row
0710 D0E0       195            pop acc
0712 C083       196            push dph
0714 C082       196            push dpl
0716 C0E0       196            push acc
0718 9006B8     196            mov dptr, #To_MSG
071B 1200BA     196            lcall ?Send_Constant_String
071E D0E0       196            pop acc
0720 D082       196            pop dpl
0722 D083       196            pop dph
0724            197   
0724 C0E0       198            push acc
0726 7407       198            mov a, #7
0728 14         198            dec a
0729 1200C7     198            lcall ?Set_Cursor_1 ; Select column and row
072C D0E0       198            pop acc
072E C083       199            push dph
0730 C082       199            push dpl
0732 C0E0       199            push acc
0734 9006BC     199            mov dptr, #Tj_MSG
0737 1200BA     199            lcall ?Send_Constant_String
073A D0E0       199            pop acc
073C D082       199            pop dpl
073E D083       199            pop dph
0740            200   
0740 C0E0       201            push acc
0742 740F       201            mov a, #15
0744 14         201            dec a
0745 1200C7     201            lcall ?Set_Cursor_1 ; Select column and row
0748 D0E0       201            pop acc
074A C0E0       202            push acc
074C 7443       202            mov a, #'C'
074E 12007D     202            lcall ?WriteData
0751 D0E0       202            pop acc
0753            203   
0753 1205E2     204            lcall Display_Reflow_Temperature
0756 1205B6     205            lcall Display_Soak_Temperature
0759            206   
0759 C0E0       207            push acc
075B 7401       207            mov a, #1
075D 14         207            dec a
075E 1200C5     207            lcall ?Set_Cursor_2 ; Select column and row
0761 D0E0       207            pop acc
0763 C0E0       208            push acc
0765 7453       208            mov a, #'S'
0767 12007D     208            lcall ?WriteData
076A D0E0       208            pop acc
076C            209   
076C C0E0       210            push acc
076E 7407       210            mov a, #7
0770 14         210            dec a
0771 1200C5     210            lcall ?Set_Cursor_2 ; Select column and row
0774 D0E0       210            pop acc
0776 C0E0       211            push acc
0778 7452       211            mov a, #'R'
077A 12007D     211            lcall ?WriteData
077D D0E0       211            pop acc
077F            212   
077F C0E0       213            push acc
0781 7405       213            mov a, #5
0783 14         213            dec a
0784 1200C5     213            lcall ?Set_Cursor_2 ; Select column and row
0787 D0E0       213            pop acc
0789 C0E0       214            push acc
078B 7443       214            mov a, #'C'
078D 12007D     214            lcall ?WriteData
0790 D0E0       214            pop acc
0792            215   
0792 C0E0       216            push acc
0794 740B       216            mov a, #11
0796 14         216            dec a
0797 1200C5     216            lcall ?Set_Cursor_2 ; Select column and row
079A D0E0       216            pop acc
079C C0E0       217            push acc
079E 7443       217            mov a, #'C'
07A0 12007D     217            lcall ?WriteData
07A3 D0E0       217            pop acc
07A5            218   
07A5 C0E0       219            push acc
07A7 740F       219            mov a, #15
07A9 14         219            dec a
07AA 1200C5     219            lcall ?Set_Cursor_2 ; Select column and row
07AD D0E0       219            pop acc
07AF C000       220            push ar0
07B1 A830       220            mov r0, STATE_NUM
07B3 1200CC     220            lcall ?Display_BCD
07B6 D000       220            pop ar0
07B8            221   
07B8 300E15     222            jnb Mode, Display_Soak
07BB            223   Display_Reflow:
07BB C0E0       224            push acc
07BD 740D       224            mov a, #13
07BF 14         224            dec a
07C0 1200C5     224            lcall ?Set_Cursor_2 ; Select column and row
07C3 D0E0       224            pop acc
07C5 C0E0       225            push acc
07C7 7452       225            mov a, #'R'
07C9 12007D     225            lcall ?WriteData
07CC D0E0       225            pop acc
07CE 8013       226            SJMP Display_Mode_Done
07D0            227   Display_Soak:
07D0 C0E0       228            push acc
07D2 740D       228            mov a, #13
07D4 14         228            dec a
07D5 1200C5     228            lcall ?Set_Cursor_2 ; Select column and row
07D8 D0E0       228            pop acc
07DA C0E0       229            push acc
07DC 7453       229            mov a, #'S'
07DE 12007D     229            lcall ?WriteData
07E1 D0E0       229            pop acc
07E3            230   Display_Mode_Done:
07E3 22         231            RET
07E4            232   
07E4            233   Display_LCDTest:
07E4 120504     234            lcall Display_LM335_Temperature
07E7            235            ; lcall Display_Thermocouple_Temperature
07E7 120544     236            lcall Display_Oven_Temperature
07EA            237   
07EA C0E0       238            push acc
07EC 7401       238            mov a, #1
07EE 14         238            dec a
07EF 1200C7     238            lcall ?Set_Cursor_1 ; Select column and row
07F2 D0E0       238            pop acc
07F4 C000       239            push ar0
07F6 A830       239            mov r0, STATE_NUM
07F8 1200CC     239            lcall ?Display_BCD
07FB D000       239            pop ar0
07FD            240   
07FD C0E0       241            push acc
07FF 7401       241            mov a, #1
0801 14         241            dec a
0802 1200C5     241            lcall ?Set_Cursor_2 ; Select column and row
0805 D0E0       241            pop acc
0807 C000       242            push ar0
0809 A836       242            mov r0, BCD_Counter
080B 1200CC     242            lcall ?Display_BCD
080E D000       242            pop ar0
0810 C0E0       243            push acc
0812 7405       243            mov a, #5
0814 14         243            dec a
0815 1200C5     243            lcall ?Set_Cursor_2 ; Select column and row
0818 D0E0       243            pop acc
081A C000       244            push ar0
081C A838       244            mov r0, Resulting_Counter
081E 1200CC     244            lcall ?Display_BCD
0821 D000       244            pop ar0
0823            245   
0823            246            ; lcall Display_SpeakerFlag
0823            247            ; lcall Display_BelowFlag
0823            248   
0823            249            ; LCALL Display_Output_Voltage
0823            250   
0823 22         251            RET
0824            252   
0824            253   Display_Error:
0824 C0E0       254            push acc
0826 7401       254            mov a, #1
0828 14         254            dec a
0829 1200C7     254            lcall ?Set_Cursor_1 ; Select column and row
082C D0E0       254            pop acc
082E C083       255            push dph
0830 C082       255            push dpl
0832 C0E0       255            push acc
0834 9006C3     255            mov dptr, #ERROR_MSG
0837 1200BA     255            lcall ?Send_Constant_String
083A D0E0       255            pop acc
083C D082       255            pop dpl
083E D083       255            pop dph
0840 C0E0       256            push acc
0842 7401       256            mov a, #1
0844 14         256            dec a
0845 1200C5     256            lcall ?Set_Cursor_2 ; Select column and row
0848 D0E0       256            pop acc
084A C083       257            push dph
084C C082       257            push dpl
084E C0E0       257            push acc
0850 9006D4     257            mov dptr, #TEMP_MSG
0853 1200BA     257            lcall ?Send_Constant_String
0856 D0E0       257            pop acc
0858 D082       257            pop dpl
085A D083       257            pop dph
085C 120AAD     258            lcall Wait2s
085F C0E0       259            push acc
0861 7401       259            mov a, #1
0863 14         259            dec a
0864 1200C7     259            lcall ?Set_Cursor_1 ; Select column and row
0867 D0E0       259            pop acc
0869 C083       260            push dph
086B C082       260            push dpl
086D C0E0       260            push acc
086F 9006E5     260            mov dptr, #EMPTY_MSG
0872 1200BA     260            lcall ?Send_Constant_String
0875 D0E0       260            pop acc
0877 D082       260            pop dpl
0879 D083       260            pop dph
087B C0E0       261            push acc
087D 7401       261            mov a, #1
087F 14         261            dec a
0880 1200C5     261            lcall ?Set_Cursor_2 ; Select column and row
0883 D0E0       261            pop acc
0885 C083       262            push dph
0887 C082       262            push dpl
0889 C0E0       262            push acc
088B 9006E5     262            mov dptr, #EMPTY_MSG
088E 1200BA     262            lcall ?Send_Constant_String
0891 D0E0       262            pop acc
0893 D082       262            pop dpl
0895 D083       262            pop dph
0897 C208       263            clr SOAK_LESS_THAN_REFLOW_FLAG
0899 22         264            ret
089A            265   
089A            266   ; Display_SetTemp:
089A            267   
089A            268   ;        ;mov a, TEMP_SOAK
089A            269   ;        ; Set_Cursor(2,9)
089A            270   ;        clr a
089A            271   ;        mov x+0, TEMP_REFLOW
089A            272   ;        ljmp Done_Set_X0
089A            273   
089A            274   ; Display_Soak:
089A            275   ;        clr a
089A            276   ;        mov x+0, TEMP_SOAK
089A            277   ;        ; Set_Cursor(2,9)
089A            278   
089A            279   ; Done_Set_X0:
089A            280   ;        mov x+1, #0x00
089A            281   ;        mov x+2, #0x00
089A            282   ;        mov x+3, #0x00
089A            283   
089A            284   ;        lcall hex2bcd
089A            285   ;        Set_Cursor(2,12)
089A            286   ;        Display_BCD(bcd+1)
089A            287   ;        Set_Cursor(2,14)
089A            288   ;        Display_BCD(bcd+0)
089A            289   ;        RET
089A            290   
089A            291   ;-------------------------------JH
089A            292   Check_Buttons:
089A D209       293            setb BTP
089C D20A       294            setb BOP
089E D20B       295            setb BTM
08A0 D20C       296            setb BOM
08A2 D20D       297            setb BMode
08A4 D296       298            setb MX_PIN
08A6            299   
08A6            300            ;Check if button is pressed
08A6 C293       301            clr TENS_BUTTON_PLUS
08A8 C280       302            clr ONES_BUTTON_PLUS
08AA C281       303            clr TENS_BUTTON_MINUS
08AC C282       304            clr ONES_BUTTON_MINUS
08AE C283       305            clr MODE_BUTTON
08B0            306   
08B0            307   
08B0            308            ;Debounce
08B0 209638     309            jb MX_PIN,Done_Check_B
08B3 120AA0     310            lcall wait30ms
08B6 209632     311            jb MX_PIN,Done_Check_B
08B9            312   
08B9            313   
08B9 D293       314            setb TENS_BUTTON_PLUS
08BB D280       315            setb ONES_BUTTON_PLUS
08BD D281       316            setb TENS_BUTTON_MINUS
08BF D282       317            setb ONES_BUTTON_MINUS
08C1 D283       318            setb MODE_BUTTON
08C3            319   
08C3            320            ;Check which buttons were pushed
08C3            321   
08C3 C293       322            clr TENS_BUTTON_PLUS
08C5 A296       323            mov c,MX_PIN
08C7 9209       324            mov BTP,c
08C9 D293       325            setb TENS_BUTTON_PLUS
08CB            326   
08CB            327   
08CB C280       328            clr ONES_BUTTON_PLUS
08CD A296       329            mov c,MX_PIN
08CF 920A       330            mov BOP,c
08D1 D280       331            setb ONES_BUTTON_PLUS
08D3            332   
08D3            333   
08D3 C281       334            clr TENS_BUTTON_MINUS
08D5 A296       335            mov c,MX_PIN
08D7 920B       336            mov BTM,c
08D9 D281       337            setb TENS_BUTTON_MINUS
08DB            338   
08DB            339   
08DB C282       340            clr ONES_BUTTON_MINUS
08DD A296       341            mov c,MX_PIN
08DF 920C       342            mov BOM,c
08E1 D282       343            setb ONES_BUTTON_MINUS
08E3            344   
08E3            345   
08E3 C283       346            clr MODE_BUTTON
08E5 A296       347            mov c,MX_PIN
08E7 920D       348            mov BMode,c
08E9 D283       349            setb MODE_BUTTON
08EB            350   Done_Check_B:
08EB 22         351            RET
08EC            352   
08EC            353   
08EC            354   
08EC            355   ;Set Reflow temperature -------------------------------JH
08EC            356   Set_Reflow_Temp:
08EC 200603     357            jb Second_Flag, One_Second_Reflow_Mark
08EF 020968     358            ljmp Done_Set_Reflow_Temp
08F2            359   One_Second_Reflow_Mark:
08F2 D209       360            setb BTP
08F4 D20A       361            setb BOP
08F6 D20B       362            setb BTM
08F8 D20C       363            setb BOM
08FA D20D       364            setb BMode
08FC D296       365            setb MX_PIN
08FE            366   
08FE            367            ;Check if button is pressed
08FE C293       368            clr TENS_BUTTON_PLUS
0900 C280       369            clr ONES_BUTTON_PLUS
0902 C281       370            clr TENS_BUTTON_MINUS
0904 C282       371            clr ONES_BUTTON_MINUS
0906 C283       372            clr MODE_BUTTON
0908            373   
0908            374            ;Debounce
0908 20965D     375            jb MX_PIN,Done_Set_Reflow_Temp
090B 120AA0     376            lcall wait30ms
090E 209657     377            jb MX_PIN,Done_Set_Reflow_Temp
0911            378   
0911 D293       379            setb TENS_BUTTON_PLUS
0913 D280       380            setb ONES_BUTTON_PLUS
0915 D281       381            setb TENS_BUTTON_MINUS
0917 D282       382            setb ONES_BUTTON_MINUS
0919 D283       383            setb MODE_BUTTON
091B            384   
091B            385            ;Check which buttons were pushed
091B            386   
091B C293       387            clr TENS_BUTTON_PLUS
091D A296       388            mov c,MX_PIN
091F 9209       389            mov BTP,c
0921 D293       390            setb TENS_BUTTON_PLUS
0923            391   
0923 200909     392            jb BTP,Check_Ones_Reflow_Plus
0926 E53F       393            mov a, TEMP_REFLOW
0928 240A       394            add a,#0x0A
092A F53F       395            mov TEMP_Reflow,a
092C            396            ; mov x,a
092C            397   
092C            398            ; lcall hex2bcd
092C            399            ; lcall Display_SetTemp
092C 020968     400            ljmp Done_Set_Reflow_Temp
092F            401   
092F            402   Check_Ones_Reflow_Plus:
092F C280       403            clr ONES_BUTTON_PLUS
0931 A296       404            mov c,MX_PIN
0933 920A       405            mov BOP,c
0935 D280       406            setb ONES_BUTTON_PLUS
0937            407   
0937 200A09     408            jb BOP,Check_Tens_Reflow_Minus
093A E53F       409            mov a, TEMP_Reflow
093C 2401       410            add a,#1
093E F53F       411            mov TEMP_Reflow,a
0940            412            ; mov x,a
0940            413   
0940            414            ; lcall hex2bcd
0940            415            ; lcall Display_SetTemp
0940 020968     416            ljmp Done_Set_Reflow_Temp
0943            417   
0943            418   Check_Tens_Reflow_Minus:
0943 C281       419            clr TENS_BUTTON_MINUS
0945 A296       420            mov c,MX_PIN
0947 920B       421            mov BTM,c
0949 D281       422            setb TENS_BUTTON_MINUS
094B            423   
094B 200B09     424            jb BTM,Check_Ones_Reflow_Minus
094E E53F       425            mov a, TEMP_Reflow
0950 940A       426            subb a,#10
0952 F53F       427            mov TEMP_Reflow,a
0954            428            ; mov x,a
0954            429   
0954            430            ; lcall hex2bcd
0954            431            ; lcall Display_SetTemp
0954 020968     432            ljmp Done_Set_Reflow_Temp
0957            433   
0957            434   Check_Ones_Reflow_Minus:
0957 C282       435            clr ONES_BUTTON_MINUS
0959 A296       436            mov c,MX_PIN
095B 920C       437            mov BOM,c
095D D282       438            setb ONES_BUTTON_MINUS
095F            439   
095F 200C06     440            jb BOM,Done_Set_Reflow_Temp
0962 E53F       441            mov a, TEMP_Reflow
0964 9401       442            subb a,#1
0966 F53F       443            mov TEMP_Reflow,a
0968            444            ; mov x,a
0968            445   
0968            446            ; lcall hex2bcd
0968            447            ; lcall Display_SetTemp
0968            448   
0968            449   Done_Set_Reflow_Temp:
0968 22         450            RET
0969            451   
0969            452   
0969            453   
0969            454   ;Set Soaking temperature
0969            455   Set_Soak_Temp:
0969 200603     456            jb Second_Flag, One_Second_Soak_Mark
096C 0209E5     457            ljmp Done_Set_Soak_Temp
096F            458   One_Second_Soak_Mark:
096F D209       459            setb BTP
0971 D20A       460            setb BOP
0973 D20B       461            setb BTM
0975 D20C       462            setb BOM
0977 D20D       463            setb BMode
0979 D296       464            setb MX_PIN
097B            465   
097B            466            ;Check if button is pressed
097B C293       467            clr TENS_BUTTON_PLUS
097D C280       468            clr ONES_BUTTON_PLUS
097F C281       469            clr TENS_BUTTON_MINUS
0981 C282       470            clr ONES_BUTTON_MINUS
0983 C283       471            clr MODE_BUTTON
0985            472   
0985            473            ;Debounce
0985 20965D     474            jb MX_PIN,Done_Set_Soak_Temp
0988 120AA0     475            lcall wait30ms
098B 209657     476            jb MX_PIN,Done_Set_Soak_Temp
098E            477   
098E D293       478            setb TENS_BUTTON_PLUS
0990 D280       479            setb ONES_BUTTON_PLUS
0992 D281       480            setb TENS_BUTTON_MINUS
0994 D282       481            setb ONES_BUTTON_MINUS
0996 D283       482            setb MODE_BUTTON
0998            483   
0998            484            ;Check which buttons were pushed
0998            485   
0998 C293       486            clr TENS_BUTTON_PLUS
099A A296       487            mov c,MX_PIN
099C 9209       488            mov BTP,c
099E D293       489            setb TENS_BUTTON_PLUS
09A0            490   
09A0 200909     491            jb BTP,Check_Ones_Plus_Soak
09A3 E53E       492            mov a, TEMP_SOAK
09A5 240A       493            add a,#0x0A
09A7 F53E       494            mov TEMP_SOAK,a
09A9            495            ; mov x,a
09A9            496   
09A9            497            ; lcall hex2bcd
09A9            498            ; lcall Display_SetTemp
09A9 0209E5     499            ljmp Done_Set_Soak_Temp
09AC            500   
09AC            501   Check_Ones_Plus_Soak:
09AC C280       502            clr ONES_BUTTON_PLUS
09AE A296       503            mov c,MX_PIN
09B0 920A       504            mov BOP,c
09B2 D280       505            setb ONES_BUTTON_PLUS
09B4            506   
09B4 200A09     507            jb BOP,Check_Tens_Minus_Soak
09B7 E53E       508            mov a, TEMP_SOAK
09B9 2401       509            add a,#1
09BB F53E       510            mov TEMP_SOAK,a
09BD            511            ; mov x,a
09BD            512   
09BD            513            ; lcall hex2bcd
09BD            514            ; lcall Display_SetTemp
09BD 0209E5     515            ljmp Done_Set_Soak_Temp
09C0            516   
09C0            517   Check_Tens_Minus_Soak:
09C0 C281       518            clr TENS_BUTTON_MINUS
09C2 A296       519            mov c,MX_PIN
09C4 920B       520            mov BTM,c
09C6 D281       521            setb TENS_BUTTON_MINUS
09C8            522   
09C8 200B09     523            jb BTM,Check_Ones_Minus_Soak
09CB E53E       524            mov a, TEMP_SOAK
09CD 940A       525            subb a,#10
09CF F53E       526            mov TEMP_SOAK,a
09D1            527            ; mov x,a
09D1            528   
09D1            529            ; lcall hex2bcd
09D1            530            ; lcall Display_SetTemp
09D1 0209E5     531            ljmp Done_Set_Soak_Temp
09D4            532   
09D4            533   Check_Ones_Minus_Soak:
09D4 C282       534            clr ONES_BUTTON_MINUS
09D6 A296       535            mov c,MX_PIN
09D8 920C       536            mov BOM,c
09DA D282       537            setb ONES_BUTTON_MINUS
09DC            538   
09DC 200C06     539            jb BOM,Done_Set_Soak_Temp
09DF E53E       540            mov a, TEMP_SOAK
09E1 9401       541            subb a,#1
09E3 F53E       542            mov TEMP_SOAK,a
09E5            543            ; mov x,a
09E5            544   
09E5            545            ; lcall hex2bcd
09E5            546            ; lcall Display_SetTemp
09E5            547   
09E5            548   Done_Set_Soak_Temp:
09E5 22         549            RET
09E6            550   
09E6            551   ;-------------------------------JH
09E6            552   
09E6            553   Init_Vars:
09E6            554       ; Initial Values at State 0
09E6 753000     555            MOV STATE_NUM, #0x00
09E9            556   
09E9 753D32     557            MOV TEMP_ERROR, #50
09EC 753E91     558            MOV TEMP_SOAK, #145
09EF 753FD9     559            MOV TEMP_REFLOW, #217
09F2            560   
09F2 755A00     561            MOV VLED_ADC+0, #0
09F5 755B00     562            MOV VLED_ADC+1, #0
09F8            563   
09F8 755C00     564            MOV LM335_TEMP+0, #0
09FB 755D00     565            MOV LM335_TEMP+1, #0
09FE            566   
09FE 756000     567            MOV THERMOCOUPLE_TEMP+0, #0
0A01 756100     568            MOV THERMOCOUPLE_TEMP+1, #0
0A04            569   Reset_Vars:
0A04 753600     570            MOV BCD_Counter, #0x00
0A07 753800     571            MOV Resulting_Counter, #0x00
0A0A 753B00     572       MOV Desired_PWM+0, #0x00
0A0D 753C00     573       MOV Desired_PWM+1, #0x00
0A10            574   
0A10 753500     575            mov speaker_counts, #0x00
0A13 753300     576            mov speaker_counter1ms, #0x00
0A16 753400     577            mov speaker_counter1ms+1, #0x00
0A19            578   
0A19 C295       579       clr OUTPUT_PIN
0A1B D284       580            SETB START_BUTTON
0A1D D293       581            setb TENS_BUTTON_PLUS
0A1F D280       582            setb ONES_BUTTON_PLUS
0A21 C283       583            clr MODE_BUTTON
0A23 C20E       584            clr Mode
0A25 C201       585            CLR Below_Temp_Flag
0A27 C202       586            CLR Error_Triggered_Flag
0A29            587   
0A29 22         588            RET
0A2A            589   
0A2A            590   Timer0_ISR:
0A2A            591            ; Save Registers to Stack.
0A2A C0E0       592       PUSH ACC
0A2C C0D0       593            PUSH PSW
0A2E            594   
0A2E C28C       595            CLR TR0
0A30 758CF0     596            MOV TH0, #HIGH(TIMER0_RELOAD)
0A33 758A2C     597            MOV TL0, #LOW(TIMER0_RELOAD)
0A36 D28C       598            SETB TR0
0A38            599   
0A38 B285       600            CPL SPEAKER_OUT ; Toggle the Alarm Out Pin
0A3A D0D0       601            POP PSW
0A3C D0E0       602            POP ACC
0A3E            603   
0A3E 32         604            RETI
0A3F            605   ;-------------;
0A3F            606   ; Timer 2 ISR ;
0A3F            607   ;-------------;
0A3F            608   
0A3F            609   Timer2_ISR:
0A3F C2CF       610            CLR TF2  ; Timer 2 Doesn't Clear TF2 Automatically. Do it in the ISR.  It is Bit Addressable.
0A41            611   
0A41            612            ; Save Registers to Stack
0A41 C0E0       613            PUSH ACC
0A43 C0D0       614            PUSH PSW
0A45            615   
0A45            616            ; Increment 16-bit 1ms Counter.
0A45 0531       617            INC Count1ms+0 ; Increment Low 8-bits
0A47 E531       618            MOV a, Count1ms+0 ; Increment High 8-bits if Lower 8-bits Overflow
0A49 7002       619            JNZ Inc_Done
0A4B 0532       620            INC Count1ms+1
0A4D            621   Inc_Done:
0A4D            622   
0A4D E539       623            MOV A, Timer_State
0A4F B40103     624            CJNE A, #0x01, Continue ; Jump If Not In Timer State
0A52 120669     625            LCALL Inc_PWM
0A55            626   Continue:
0A55            627            ; Check If oNE Second Has Passed
0A55 E531       628            MOV A, Count1ms+0
0A57 B4E841     629            CJNE A, #LOW(1000), Timer2_ISR_Done
0A5A E532       630            MOV A, Count1ms+1
0A5C B4033C     631            CJNE A, #HIGH(1000), Timer2_ISR_Done
0A5F            632   
0A5F D206       633            setb Second_Flag
0A61 D207       634            setb Emergency_Flag
0A63 12060E     635            LCALL TX_Temp_Oven
0A66 E4         636            CLR A
0A67 F531       637            MOV Count1ms+0, A
0A69 F532       638            MOV Count1ms+1, A
0A6B            639            ; Increment the BCD counter
0A6B            640   
0A6B B28C       641            cpl TR0
0A6D E536       642            MOV A, BCD_Counter
0A6F 2401       643            ADD A, #0x01
0A71 D4         644            DA A
0A72 F536       645            MOV BCD_Counter, A
0A74            646   
0A74            647   
0A74 F536       648       MOV BCD_Counter, A
0A76 B53822     649            CJNE A, Resulting_Counter, Timer2_ISR_Done ; Skip if BCD_Counter != Resulting_Counter
0A79 E539       650            MOV A, Timer_State
0A7B B4011D     651       CJNE A, #0x01, Timer2_ISR_Done; Skip If We're Not In Timer State
0A7E            652   
0A7E E530       653            MOV A, STATE_NUM
0A80 B40111     654            CJNE A, #0x01, OtherStates ; Skip If Not State 1
0A83            655   
0A83            656   Check_Error_State:
0A83            657            ; Check If Oven Temperature < 50
0A83 120659     658            LCALL Check_Temp_Error
0A86 300212     659            JNB Error_Triggered_Flag, Timer2_ISR_Done ; Skip If Oven Temperature <= 50
0A89            660   Error_State_Triggered:
0A89            661            ;CLR Error_Triggered_Flag
0A89 753000     662            MOV STATE_NUM, #0x00
0A8C 753600     663            MOV BCD_Counter, #0x00
0A8F            664   
0A8F D205       665            setb State_TX_Flag
0A91 020A9B     666            LJMP Timer2_ISR_Done
0A94            667   OtherStates:
0A94 753600     668            MOV BCD_Counter, #0x00
0A97            669   
0A97 D205       670            setb State_TX_Flag
0A99 0530       671            INC STATE_NUM ; Increment State Number
0A9B            672   Timer2_ISR_Done:
0A9B D0D0       673            POP PSW
0A9D D0E0       674            POP ACC
0A9F 32         675            RETI
0AA0            676   
0AA0            677   
0AA0            678   
0AA0            679   Wait30ms:
0AA0 7A06       680       MOV R2, #6
0AA2 79C8       681   W3: MOV R1, #200
0AA4 7868       682   W2: MOV R0, #104
0AA6 D8FE       683   W1: djnz R0, W1 ; 4 cycles-> 4 * 60.285ns * 104 = 25us
0AA8 D9FA       684       djnz R1, W2 ; 25us * 200 = 5.0ms
0AAA DAF6       685       djnz R2, W3 ; 5.0ms * 6 = 30ms (Approximately)
0AAC 22         686       RET
0AAD            687   
0AAD            688   Wait2s:
0AAD 7B02       689       MOV R3, #2      ; Adjusted for a 2-second delay
0AAF 7AC8       690   X4: MOV R2, #200
0AB1 79C8       691   X3: MOV R1, #200
0AB3 7868       692   X2: MOV R0, #104
0AB5 D8FE       693   X1: djnz R0, X1     ; 25us * 104 = 2.6ms (Approximately)
0AB7 D9FA       694       djnz R1, X2     ; 2.6ms * 200 = 520ms (Approximately)
0AB9 DAF6       695       djnz R2, X3     ; 520ms * 66 = 2 seconds (Approximately)
0ABB DBF2       696       djnz R3, X4     ; 520ms * 66 = 2 seconds (Approximately)
0ABD 22         697       RET
0ABE            698   
0ABE            699   
0ABE            700   StateChanges: ; Check What Counter Number Will Be For Each State
0ABE E530       701            MOV A, STATE_NUM
0AC0 B40006     702            CJNE A, #0x00, Next1 ; Jump to Next1 if STATE_NUM is NOT 0
0AC3            703   
0AC3 120AFC     704            LCALL State0
0AC6 020AFB     705            LJMP Done_State_Counter
0AC9            706   Next1:
0AC9 E530       707            MOV A, STATE_NUM
0ACB B40106     708            CJNE A, #0x01, Next2 ; Jump to Next2 if STATE_NUM is NOT 1
0ACE            709   
0ACE 120B1F     710            LCALL State1
0AD1 020AFB     711            LJMP Done_State_Counter
0AD4            712   Next2:
0AD4 E530       713            MOV A, STATE_NUM
0AD6 B40206     714            CJNE A, #0x02, Next3 ; Jump to Next3 if STATE_NUM is NOT 2
0AD9            715   
0AD9 120B38     716            LCALL State2
0ADC 020AFB     717            LJMP Done_State_Counter
0ADF            718   Next3:
0ADF E530       719            MOV a, STATE_NUM
0AE1 B40306     720            CJNE a, #0x03, Next4 ; Jump to Next4 if STATE_NUM is NOT 3
0AE4            721   
0AE4 120B3F     722            LCALL State3
0AE7 020AFB     723            LJMP Done_State_Counter
0AEA            724   Next4:
0AEA E530       725            MOV A, STATE_NUM
0AEC B40406     726            CJNE A, #0x04, Next5 ; Jump to Next5 if STATE_NUM is NOT 4
0AEF            727   
0AEF 120B5B     728            LCALL State4
0AF2 020AFB     729            LJMP Done_State_Counter
0AF5            730   Next5:
0AF5 120B62     731            LCALL State5
0AF8 020AFB     732            LJMP Done_State_Counter
0AFB            733   
0AFB            734   Done_State_Counter:
0AFB 22         735            RET
0AFC            736   
0AFC            737   State0:
0AFC            738   
0AFC 753900     739       MOV Timer_State, #0x00
0AFF 120682     740       LCALL Power0
0B02 12089A     741            LCALL Check_Buttons
0B05            742   
0B05 208416     743            JB START_BUTTON, Quit0 ; Go to Quit0 If Start Button is NOT Pressed
0B08 120AA0     744            LCALL Wait30ms
0B0B 208410     745            JB START_BUTTON, Quit0
0B0E            746   
0B0E            747   
0B0E 3084FD     748            JNB START_BUTTON, $ ; Go to State1 If Start Button is Pressed
0B11 753600     749            MOV BCD_Counter, #0x00
0B14 753860     750            MOV Resulting_Counter, #0x60
0B17 0530       751            INC STATE_NUM
0B19            752   
0B19 D205       753            setb State_TX_Flag
0B1B            754   
0B1B 1206F6     755            lcall soak_is_less_than_reflow
0B1E            756            ;setb TR0
0B1E            757   Quit0:
0B1E 22         758            RET
0B1F            759   
0B1F            760   State1:
0B1F 753901     761       MOV Timer_State, #0x01
0B22 120685     762       LCALL Power100
0B25            763   
0B25 A93E       764            MOV R1, TEMP_SOAK
0B27 12064D     765            LCALL Check_Temp_Oven ; Check If Oven Temperature Reaches 150
0B2A 20010A     766            JB Below_Temp_Flag, Quit1 ; If Temperature Below then jump to quit1
0B2D            767   
0B2D            768            ;CLR Below_Temp_Flag
0B2D 753600     769            MOV BCD_Counter, #0x00
0B30 753890     770            MOV Resulting_Counter, #0x90
0B33 0530       771            INC STATE_NUM
0B35            772   
0B35 D205       773            setb State_TX_Flag
0B37            774   Quit1:
0B37 22         775            RET
0B38            776   
0B38            777   State2:
0B38 120688     778       LCALL Power30 ; Set Power to 20%
0B3B 753901     779       MOV Timer_State, #0x01
0B3E            780   
0B3E            781   Quit2:
0B3E 22         782            RET
0B3F            783   
0B3F            784   State3:
0B3F 120685     785       LCALL Power100 ; Set Power to 100%
0B42 753900     786       MOV Timer_State, #0x00
0B45            787   
0B45 A93F       788            MOV R1, TEMP_REFLOW
0B47 12064D     789            LCALL Check_Temp_Oven
0B4A 20010D     790            JB Below_Temp_Flag, Quit3
0B4D            791   
0B4D            792            ;CLR Below_Temp_Flag
0B4D 753901     793       MOV Timer_State, #0x01
0B50 753600     794            MOV BCD_Counter, #0x00
0B53 753860     795            MOV Resulting_Counter, #0x60
0B56 0530       796            INC STATE_NUM
0B58            797   
0B58 D205       798            setb State_TX_Flag
0B5A            799   Quit3:
0B5A 22         800            RET
0B5B            801   
0B5B            802   State4:
0B5B 12068F     803       LCALL Power60
0B5E 753901     804       MOV Timer_State, #0x01
0B61            805       ;JB START_BUTTON, Quit4 ; if START BUTTON is NOT PRESSED
0B61            806            ;LCALL Wait30ms
0B61            807            ;JB START_BUTTON, Quit4
0B61            808   
0B61            809            ;JNB START_BUTTON, $ ; if START BUTTON is PRESSED go to State1
0B61            810            ;MOV BCD_Counter, #0x00
0B61            811   Quit4:
0B61 22         812            RET
0B62            813   
0B62            814   State5:
0B62 120682     815       LCALL Power0
0B65 753900     816       MOV Timer_State, #0x00
0B68            817   
0B68 793C       818            MOV R1, #TEMP_DONE
0B6A 12064D     819            LCALL Check_Temp_Oven ; Check If Oven Temperature Reaches 60
0B6D 30010A     820            JNB Below_Temp_Flag, Quit5  ; IF temperature >= 60, continue in state 5 (0 is above value)
0B70            821   
0B70 C201       822            CLR Below_Temp_Flag
0B72 753000     823            MOV STATE_NUM, #0x00
0B75 753600     824            MOV BCD_Counter, #0x00
0B78            825   
0B78 D205       826            setb State_TX_Flag
0B7A            827   Quit5:
0B7A 22         828            RET
0B7B            829   
0B7B            830   ;----------------;
0B7B            831   ; Initialization ;
0B7B            832   ;----------------;
0B7B            833   Init_All:
0B7B 75AC00     834            MOV     P3M1, #0X00
0B7E 75AD00     835            MOV     P3M2, #0X00
0B81            836   
0B81 75B300     837            MOV     P1M1, #0X00
0B84 75B400     838            MOV     P1M2, #0X00
0B87            839   
0B87 75B100     840            MOV     P0M1, #0X00
0B8A 75B200     841            MOV     P0M2, #0X00
0B8D            842   
0B8D            843   
0B8D D206       844            setb Second_Flag
0B8F D207       845            setb Emergency_Flag
0B91            846   
0B91 C0E0       847            push acc
0B93 7401       847            mov a, #1
0B95 14         847            dec a
0B96 1200C7     847            lcall ?Set_Cursor_1 ; Select column and row
0B99 D0E0       847            pop acc
0B9B C083       848            push dph
0B9D C082       848            push dpl
0B9F C0E0       848            push acc
0BA1 900696     848            mov dptr, #Initial_Message1
0BA4 1200BA     848            lcall ?Send_Constant_String
0BA7 D0E0       848            pop acc
0BA9 D082       848            pop dpl
0BAB D083       848            pop dph
0BAD C0E0       849            push acc
0BAF 7401       849            mov a, #1
0BB1 14         849            dec a
0BB2 1200C5     849            lcall ?Set_Cursor_2 ; Select column and row
0BB5 D0E0       849            pop acc
0BB7 C083       850            push dph
0BB9 C082       850            push dpl
0BBB C0E0       850            push acc
0BBD 9006A7     850            mov dptr, #Initial_Message2
0BC0 1200BA     850            lcall ?Send_Constant_String
0BC3 D0E0       850            pop acc
0BC5 D082       850            pop dpl
0BC7 D083       850            pop dph
0BC9            851   
0BC9 1209E6     852            LCALL Init_Vars
0BCC            853   Init_SerialPort:
0BCC            854       ; Configure Serial Port and Baud Rate
0BCC            855   
0BCC            856       ; Since Reset Button Bounces, Wait a Bit Before Sending Messages.
0BCC            857       ; Otherwise, We Risk Sending Garbage to the Serial Port.
0BCC 79C8       858       MOV R1, #200
0BCE 7868       859       MOV R0, #104
0BD0 D8FE       860       DJNZ R0, $ ; 4 Cycles-> 4 * 60.285 ns * 104 = 25 us
0BD2 D9FA       861       DJNZ R1, $-4 ; 25us * 200 = 5 ms
0BD4            862   
0BD4            863   Timer0_Init:
0BD4 438E08     864            ORL CKCON, #0B0000_1000 ; Input for Timer 0 is SYSCLK/1.
0BD7            865   
0BD7 E589       866            MOV A, TMOD
0BD9 54F0       867            ANL A, #0XF0 ; 1111_0000 Clear Bits for Timer 0
0BDB 4401       868            ORL A, #0X01 ; 0000_0001 Configure Timer 0 as 16-Timer
0BDD F589       869            MOV TMOD, A
0BDF            870   
0BDF 758CF0     871            MOV TH0, #HIGH(TIMER0_RELOAD)
0BE2 758A2C     872            MOV TL0, #LOW(TIMER0_RELOAD)
0BE5            873   
0BE5            874            ; Enable Timer and Interrupts
0BE5 D2A9       875       SETB ET0  ; Enable Timer 0 Interrupt
0BE7 D28C       876            setb TR0
0BE9            877   Init_Timer1:
0BE9 438E10     878            ORL     CKCON, #0X10 ; CLK is Input for Timer 1.
0BEC 438780     879            ORL     PCON, #0X80 ; Bit SMOD = 1, Double Baud Rate
0BEF 759852     880            MOV     SCON, #0X52
0BF2 53C4DF     881            ANL     T3CON, #0B1101_1111
0BF5 53890F     882            ANL     TMOD, #0X0F ; Clear Configuration Bits for Timer 1
0BF8 438920     883            ORL     TMOD, #0X20 ; Timer 1 Mode 2
0BFB 758DF7     884            MOV     TH1, #TIMER1_RELOAD ; TH1 = TIMER1_RELOAD;
0BFE D28E       885            SETB TR1
0C00            886   Init_ADC:
0C00            887            ; Initialize the pins used by the ADC (P1.1, P1.7, P3.0) as Analog Inputs
0C00 43B382     888            ORL     P1M1, #0B1000_0010
0C03 53B47D     889            ANL     P1M2, #0B0111_1101
0C06 43AC02     890            ORL     P3M1, #0B0000_0010
0C09 53ADFD     891            ANL P3M2, #0B1111_1101
0C0C            892   
0C0C            893            ; AINDIDS Select if Some Pins are Analog Inputs or Digital I/O
0C0C 75F600     894            MOV AINDIDS, #0X00 ; Disable All Analog Inputs
0C0F 43F683     895            ORL AINDIDS, #0B1000_0011 ; Activate AIN0, AIN1, AIN7
0C12            896   
0C12 43E101     897            ORL ADCCON1, #0X01 ; Enable ADC
0C15            898   Init_Timer2:
0C15 75C800     899            MOV T2CON, #0 ; Stop Timer. Autoreload Mode.
0C18 75CDBF     900            MOV TH2, #HIGH(TIMER2_RELOAD)
0C1B 75CC28     901            MOV TL2, #LOW(TIMER2_RELOAD)
0C1E            902   
0C1E            903            ; Set Reload Value
0C1E 43C980     904            ORL T2MOD, #0X80 ; Enable Timer 2 Autoreload Mode
0C21 75CBBF     905            MOV RCMP2H, #HIGH(TIMER2_RELOAD)
0C24 75CA28     906            MOV RCMP2L, #LOW(TIMER2_RELOAD)
0C27            907   
0C27            908            ; Init 1ms Interrupt Counter. 16-bit Variable with Two 8-bit Parts.
0C27 E4         909            CLR A
0C28 F531       910            MOV Count1ms+0, A
0C2A F532       911            MOV Count1ms+1, A
0C2C            912   
0C2C            913            ; Enable the Timer and Interrupts.
0C2C 439B80     914            ORL EIE, #0X80 ; Enable Timer 2 Interrupt ET2=1
0C2F D2CA       915       SETB TR2  ; Enable Timer 2
0C31 22         916       RET
0C32            917   
0C32            918   Main:
0C32            919            ; Initialization
0C32 75817F     920            MOV SP, #0X7F
0C35 D2AF       921       SETB EA   ; Enable Global interrupts
0C37 120B7B     922            LCALL Init_All
0C3A 120087     923            LCALL LCD_4BIT
0C3D            924   Forever:
0C3D 12063D     925            LCALL Get_and_Transmit_Temp
0C40 120702     926            LCALL Display_LCDFinal
0C43 300803     927            jnb SOAK_LESS_THAN_REFLOW_FLAG, Continue_forever
0C46 120824     928            lcall Display_Error
0C49            929   Continue_forever:
0C49 120ABE     930            LCALL StateChanges
0C4C            931   
0C4C 120110     932            LCALL TX_StateNumber
0C4F            933   
0C4F C205       934            clr State_TX_Flag
0C51            935   
0C51 200D05     936            jb BMode, No_Mode_Change
0C54 300602     937            jnb Second_Flag, No_Mode_Change
0C57 B20E       938            cpl Mode
0C59            939   No_Mode_Change:
0C59            940   
0C59 300E06     941            jnb Mode, Soak_Temp
0C5C 1208EC     942            LCALL Set_Reflow_Temp
0C5F 020C65     943            ljmp Done_Temp_Set
0C62            944   
0C62            945   Soak_Temp:
0C62 120969     946            LCALL Set_Soak_Temp
0C65            947   
0C65            948   Done_Temp_Set:
0C65 C206       949            clr Second_Flag
0C67            950   Button_Reset:
0C67 E530       951            MOV A, STATE_NUM
0C69 6010       952            jz Forever_End ; skip if a  = 0
0C6B            953   
0C6B 30070D     954            JNB Emergency_Flag, Forever_End
0C6E 20840A     955            JB START_BUTTON, Forever_End ; Go to Quit0 If Start Button is NOT Pressed
0C71 C207       956            CLR Emergency_Flag
0C73            957   
0C73 D205       958            setb State_TX_Flag
0C75 753000     959            MOV STATE_NUM, #0x00
0C78 3084FD     960            JNB Start_Button, $
0C7B            961   Forever_End:
0C7B 020C3D     962            LJMP Forever
0C7E            963   EN
