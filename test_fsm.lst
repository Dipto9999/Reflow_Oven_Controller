                  2   $LIST
0000              4   
0000              5   ;  N76E003 pinout:
0000              6   ;                               -------
0000              7   ;       PWM2/IC6/T0/AIN4/P0.5 -|1    20|- P0.4/AIN5/STADC/PWM3/IC3
0000              8   ;               TXD/AIN3/P0.6 -|2    19|- P0.3/PWM5/IC5/AIN6
0000              9   ;               RXD/AIN2/P0.7 -|3    18|- P0.2/ICPCK/OCDCK/RXD_1/[SCL]
0000             10   ;                    RST/P2.0 -|4    17|- P0.1/PWM4/IC4/MISO
0000             11   ;        INT0/OSCIN/AIN1/P3.0 -|5    16|- P0.0/PWM3/IC3/MOSI/T1
0000             12   ;              INT1/AIN0/P1.7 -|6    15|- P1.0/PWM2/IC2/SPCLK
0000             13   ;                         GND -|7    14|- P1.1/PWM1/IC1/AIN7/CLO
0000             14   ;[SDA]/TXD_1/ICPDA/OCDDA/P1.6 -|8    13|- P1.2/PWM0/IC0
0000             15   ;                         VDD -|9    12|- P1.3/SCL/[STADC]
0000             16   ;            PWM5/IC7/SS/P1.5 -|10   11|- P1.4/SDA/FB/PWM1
0000             17   ;                               -------
0000             18   ;
0000             19   ; 2 3 4 7 9 19 18 17 16 12 11 15 10 6 5 14
0000             20   ;-------------------;
0000             21   ; Clock Frequencies ;
0000             22   ;-------------------;
0000             23   
0000             24   CLK               EQU 16600000 ; Microcontroller System Frequency in Hz
0000             25   BAUD              EQU 115200 ; Baud Rate for UART in BPS
0000             26   
0000             27   TIMER0_RATE   EQU 4096     ; 2048Hz Squarewave (Peak Amplitude of CEM-1203 Speaker)
0000             28   TIMER0_RELOAD EQU ((65536-(CLK/TIMER0_RATE)))
0000             29   
0000             30   TIMER1_RELOAD     EQU (0X100 - (CLK / (16 * BAUD)))
0000             31   
0000             32   TIMER2_RATE       EQU 1000     ; 1000Hz, for a timer tick of 1ms
0000             33   TIMER2_RELOAD     EQU ((65536- (CLK/TIMER2_RATE)))
0000             34   
0000             35   ;-------------------;
0000             36   ;- Pin Definitions -;
0000             37   ;-------------------;
0000             38   
0000             39   ; ToDo : Button Multiplexer
0000             40   START_BUTTON       EQU P0.4 ; Pin 20
0000             41   MODE_BUTTON       EQU P1.0 ; Pin 15
0000             42   
0000             43   TENS_BUTTON       EQU P1.2 ; Pin 13
0000             44   ONES_BUTTON       EQU P1.6 ; Pin 8
0000             45   
0000             46   OUTPUT_PIN             EQU P1.5 ; Pin 10
0000             47   
0000             48   REF_ADC           EQU P1.7 ; Pin 6
0000             49   LM335_ADC                  EQU P3.0 ; Pin 5
0000             50   SPEAKER_OUT       EQU P0.5 ; Pin 1
0000             51   THERMOCOUPLE_ADC  EQU P1.1 ; Pin 14
0000             52   
0000             53   ; Reset vector
0000             54   ORG 0x0000
0000 020A96      55       LJMP Main
0003             56   
0003             57   ; External interrupt 0 vector (not used in this code)
0003             58   ORG 0x0003
0003 32          59            RETI
0004             60   
0004             61   ; Timer/Counter 0 overflow interrupt vector
000B             62   ORG 0x000B
000B 0208AA      63            ljmp Timer0_ISR
000E             64   
000E             65   ; External interrupt 1 vector (not used in this code)
0013             66   ORG 0x0013
0013 32          67            RETI
0014             68   
0014             69   ; Timer/Counter 1 overflow interrupt vector (not used in this code)
001B             70   ORG 0x001B
001B 32          71            RETI
001C             72   
001C             73   ; Serial port receive/transmit interrupt vector (not used in this code)
0023             74   ORG 0x0023
0023 32          75            RETI
0024             76   
0024             77   ; Timer/Counter 2 overflow interrupt vector
002B             78   ORG 0x002B
002B 0208BF      79            LJMP Timer2_ISR
002E             80   
0030             81   DSEG AT 0x30
0030             82   
0030             83   STATE_NUM:                 DS 1 ;
0031             84   
0031             85   Count1ms:             DS 2 ; Used to Determine When 1s Has Passed
0033             86   speaker_counter1ms:    ds 2
0035             87   speaker_counts:            ds 1 ;
0036             88   
0036             89   BCD_Counter:          DS 1 ; The BCD counter incremented in the ISR and displayed in the main loop
0037             90   Current_Counter:           DS 1 ;
0038             91   Resulting_Counter:         DS 1 ;
0039             92   
0039             93   Timer_State:          DS 1 ;
003A             94   Beep_Count:                        DS 1 ;
003B             95   Desired_PWM:               DS 2 ;
003D             96   
003D             97   ;------------------------;
003D             98   ;   Temperature Values   ;
003D             99   ;------------------------;
003D            100   
003D            101   TEMP_ERROR: DS 1
003E            102   TEMP_SOAK:  DS 1
003F            103   TEMP_REFLOW: DS 1
0040            104   
0040            105   TEMP_DONE EQU 60
0040            106   
0040            107   TX_SIZE  EQU 5 ; Size of the Transmit Buffer
0040            108   TX_BUFF: DS TX_SIZE ; Buffer for Transmit Characters
0045            109   
0045            110   X:   DS 4
0049            111   Y:   DS 4
004D            112   BCD: DS 5
0052            113   
0052            114   OVEN_BCD: DS 4
0056            115   
0056            116   Output_Voltage: DS 4
005A            117   VLED_ADC: DS 2
005C            118   
005C            119   LM335_TEMP: DS 4 ; 2 Byte Temperature Value With 0.01 Degree Resolution
0060            120   THERMOCOUPLE_TEMP: DS 4 ; 2 Byte Temperature Value With 0.01 Degree Resolution
0064            121   OVEN_TEMP: DS 1 ; 1 Byte Temperature Value With 1 Degree Resolution
0065            122   
0065            123   
0000            124   BSEG
0000            125   MF: DBIT 1
0001            126   
0001            127   Below_Temp_Flag: DBIT 1
0002            128   Error_Triggered_Flag: DBIT 1
0003            129   
0003            130   Speaker_En_Flag:   DBIT 1
0004            131   
0004            132   State_TX_Flag:           dbit 1
0005            133   
012D             75   $LIST
                546   $LIST
0669            309   $LIST
068F             37   $LIST
                140   $LIST
06F8            142   
06F8 546F3D20   143   Initial_Message1:  db 'To= xxC  Tj=xxC ', 0
     78784320
     20546A3D
     78784320
     00
0709 73787878   144   Initial_Message2:  db 'sxxx.00 rxxx.00 ', 0
     2E303020
     72787878
     2E303020
     00
071A            145   
071A            146   CSEG
071A            147   
071A 546F3D00   148   To_MSG: DB 'To=', 0
071E 43202054   149   Tj_MSG: DB 'C  Tj=', 0
     6A3D00
0725            150   
0725            151   LCD_RS EQU P1.3 ; Pin 12
0725            152   LCD_E  EQU P1.4 ; Pin 11
0725            153   LCD_D4 EQU P0.0 ; Pin 16
0725            154   LCD_D5 EQU P0.1 ; Pin 15
0725            155   LCD_D6 EQU P0.2 ; Pin 18
0725            156   LCD_D7 EQU P0.3 ; Pin 19
0725            157   
0725            158   Display_LCDFinal:
0725 120504     159            lcall Display_LM335_Temperature
0728 120544     160            lcall Display_Oven_Temperature
072B            161   
072B C0E0       162            push acc
072D 7401       162            mov a, #1
072F 14         162            dec a
0730 1200C7     162            lcall ?Set_Cursor_1 ; Select column and row
0733 D0E0       162            pop acc
0735 C083       163            push dph
0737 C082       163            push dpl
0739 C0E0       163            push acc
073B 90071A     163            mov dptr, #To_MSG
073E 1200BA     163            lcall ?Send_Constant_String
0741 D0E0       163            pop acc
0743 D082       163            pop dpl
0745 D083       163            pop dph
0747            164   
0747 C0E0       165            push acc
0749 7407       165            mov a, #7
074B 14         165            dec a
074C 1200C7     165            lcall ?Set_Cursor_1 ; Select column and row
074F D0E0       165            pop acc
0751 C083       166            push dph
0753 C082       166            push dpl
0755 C0E0       166            push acc
0757 90071E     166            mov dptr, #Tj_MSG
075A 1200BA     166            lcall ?Send_Constant_String
075D D0E0       166            pop acc
075F D082       166            pop dpl
0761 D083       166            pop dph
0763            167   
0763 C0E0       168            push acc
0765 740F       168            mov a, #15
0767 14         168            dec a
0768 1200C7     168            lcall ?Set_Cursor_1 ; Select column and row
076B D0E0       168            pop acc
076D C0E0       169            push acc
076F 7443       169            mov a, #'C'
0771 12007D     169            lcall ?WriteData
0774 D0E0       169            pop acc
0776            170   
0776 1205E2     171            lcall Display_Reflow_Temperature
0779 1205B6     172            lcall Display_Soak_Temperature
077C            173   
077C C0E0       174            push acc
077E 7401       174            mov a, #1
0780 14         174            dec a
0781 1200C5     174            lcall ?Set_Cursor_2 ; Select column and row
0784 D0E0       174            pop acc
0786 C0E0       175            push acc
0788 7473       175            mov a, #'s'
078A 12007D     175            lcall ?WriteData
078D D0E0       175            pop acc
078F            176   
078F C0E0       177            push acc
0791 7409       177            mov a, #9
0793 14         177            dec a
0794 1200C5     177            lcall ?Set_Cursor_2 ; Select column and row
0797 D0E0       177            pop acc
0799 C0E0       178            push acc
079B 7472       178            mov a, #'r'
079D 12007D     178            lcall ?WriteData
07A0 D0E0       178            pop acc
07A2            179   
07A2 C0E0       180            push acc
07A4 7405       180            mov a, #5
07A6 14         180            dec a
07A7 1200C5     180            lcall ?Set_Cursor_2 ; Select column and row
07AA D0E0       180            pop acc
07AC C0E0       181            push acc
07AE 7443       181            mov a, #'C'
07B0 12007D     181            lcall ?WriteData
07B3 D0E0       181            pop acc
07B5            182   
07B5 C0E0       183            push acc
07B7 740D       183            mov a, #13
07B9 14         183            dec a
07BA 1200C5     183            lcall ?Set_Cursor_2 ; Select column and row
07BD D0E0       183            pop acc
07BF C0E0       184            push acc
07C1 7443       184            mov a, #'C'
07C3 12007D     184            lcall ?WriteData
07C6 D0E0       184            pop acc
07C8            185   
07C8 C0E0       186            push acc
07CA 740F       186            mov a, #15
07CC 14         186            dec a
07CD 1200C5     186            lcall ?Set_Cursor_2 ; Select column and row
07D0 D0E0       186            pop acc
07D2 C000       187            push ar0
07D4 A830       187            mov r0, STATE_NUM
07D6 1200CC     187            lcall ?Display_BCD
07D9 D000       187            pop ar0
07DB            188   
07DB 22         189            RET
07DC            190   
07DC            191   Display_LCDTest:
07DC 120504     192            lcall Display_LM335_Temperature
07DF            193            ; lcall Display_Thermocouple_Temperature
07DF 120544     194            lcall Display_Oven_Temperature
07E2            195   
07E2 C0E0       196            push acc
07E4 7401       196            mov a, #1
07E6 14         196            dec a
07E7 1200C7     196            lcall ?Set_Cursor_1 ; Select column and row
07EA D0E0       196            pop acc
07EC C000       197            push ar0
07EE A830       197            mov r0, STATE_NUM
07F0 1200CC     197            lcall ?Display_BCD
07F3 D000       197            pop ar0
07F5            198   
07F5 C0E0       199            push acc
07F7 7401       199            mov a, #1
07F9 14         199            dec a
07FA 1200C5     199            lcall ?Set_Cursor_2 ; Select column and row
07FD D0E0       199            pop acc
07FF C000       200            push ar0
0801 A836       200            mov r0, BCD_Counter
0803 1200CC     200            lcall ?Display_BCD
0806 D000       200            pop ar0
0808 C0E0       201            push acc
080A 7405       201            mov a, #5
080C 14         201            dec a
080D 1200C5     201            lcall ?Set_Cursor_2 ; Select column and row
0810 D0E0       201            pop acc
0812 C000       202            push ar0
0814 A838       202            mov r0, Resulting_Counter
0816 1200CC     202            lcall ?Display_BCD
0819 D000       202            pop ar0
081B            203   
081B            204            ; lcall Display_SpeakerFlag
081B 12068F     205            lcall Display_BelowFlag
081E            206   
081E            207            ; LCALL Display_Output_Voltage
081E            208   
081E 22         209            RET
081F            210   
081F            211   Check_Buttons:
081F 20921B     212            jb TENS_BUTTON, onesbutton
0822 12091C     213            lcall Wait30ms
0825 209215     214            jb TENS_BUTTON, onesbutton
0828            215   
0828 3092FD     216            jnb TENS_BUTTON, $
082B 309009     217            jnb MODE_BUTTON, reflowaddten; if MODE BUTTON IS PRESSED, jump
082E E53E       218            mov a, TEMP_SOAK
0830 240A       219            add a, #0x0A
0832 F53E       220            mov TEMP_SOAK, a
0834 02083D     221            ljmp onesbutton
0837            222   reflowaddten:
0837 E53F       223            mov a, TEMP_REFLOW
0839 240A       224            add a, #0x0A
083B F53F       225            mov TEMP_REFLOW, a
083D            226   onesbutton:
083D 20961B     227            jb ONES_BUTTON, done_check_button
0840 12091C     228            lcall Wait30ms
0843 209615     229            jb ONES_BUTTON, done_check_button
0846            230   
0846 3096FD     231            jnb ONES_BUTTON, $
0849 309009     232            jnb MODE_BUTTON, reflowaddone; if MODE BUTTON IS PRESSED, jump
084C E53E       233            mov a, TEMP_SOAK
084E 2401       234            add a, #0x01
0850 F53E       235            mov TEMP_SOAK, a
0852 02085B     236            ljmp done_check_button
0855            237   reflowaddone:
0855 E53F       238            mov a, TEMP_REFLOW
0857 2401       239            add a, #0x01
0859 F53F       240            mov TEMP_REFLOW, a
085B            241   done_check_button:
085B E53F       242            mov a, TEMP_REFLOW
085D 953E       243            subb a, TEMP_SOAK ; if REFLOW - SOAK = + we good
085F 5004       244            jnc done_reflow_and_soak_temp_check ;
0861 E53F       245            mov a, TEMP_REFLOW
0863 F53E       246            mov TEMP_SOAK, a
0865            247   done_reflow_and_soak_temp_check:
0865 22         248            ret
0866            249   
0866            250   Init_Vars:
0866            251       ; Initial Values at State 0
0866 753000     252            MOV STATE_NUM, #0x00
0869            253   
0869 753D32     254            MOV TEMP_ERROR, #50
086C 753E91     255            MOV TEMP_SOAK, #145
086F 753FD9     256            MOV TEMP_REFLOW, #217
0872            257   
0872 755A00     258            MOV VLED_ADC+0, #0
0875 755B00     259            MOV VLED_ADC+1, #0
0878            260   
0878 755C00     261            MOV LM335_TEMP+0, #0
087B 755D00     262            MOV LM335_TEMP+1, #0
087E            263   
087E 756000     264            MOV THERMOCOUPLE_TEMP+0, #0
0881 756100     265            MOV THERMOCOUPLE_TEMP+1, #0
0884            266   
0884 D204       267            setb State_TX_Flag
0886            268   Reset_Vars:
0886 753600     269            MOV BCD_Counter, #0x00
0889 753800     270            MOV Resulting_Counter, #0x00
088C 753B00     271       MOV Desired_PWM+0, #0x00
088F 753C00     272       MOV Desired_PWM+1, #0x00
0892            273   
0892 753500     274            mov speaker_counts, #0x00
0895 753300     275            mov speaker_counter1ms, #0x00
0898 753400     276            mov speaker_counter1ms+1, #0x00
089B            277   
089B C295       278       clr OUTPUT_PIN
089D D284       279            SETB START_BUTTON
089F D292       280            setb TENS_BUTTON
08A1 D296       281            setb ONES_BUTTON
08A3 D290       282            setb MODE_BUTTON
08A5 C201       283            CLR Below_Temp_Flag
08A7 C202       284            CLR Error_Triggered_Flag
08A9            285   
08A9 22         286            RET
08AA            287   
08AA            288   Timer0_ISR:
08AA            289            ; Save Registers to Stack.
08AA C0E0       290       PUSH ACC
08AC C0D0       291            PUSH PSW
08AE            292   
08AE            293   
08AE C28C       294            CLR TR0
08B0 758CF0     295            MOV TH0, #HIGH(TIMER0_RELOAD)
08B3 758A2C     296            MOV TL0, #LOW(TIMER0_RELOAD)
08B6 D28C       297            SETB TR0
08B8            298   
08B8 B285       299            CPL SPEAKER_OUT ; Toggle the Alarm Out Pin
08BA D0D0       300            POP PSW
08BC D0E0       301            POP ACC
08BE            302   
08BE 32         303            RETI
08BF            304   ;-------------;
08BF            305   ; Timer 2 ISR ;
08BF            306   ;-------------;
08BF            307   
08BF            308   Timer2_ISR:
08BF C2CF       309            CLR TF2  ; Timer 2 Doesn't Clear TF2 Automatically. Do it in the ISR.  It is Bit Addressable.
08C1            310   
08C1            311            ; Save Registers to Stack
08C1 C0E0       312            PUSH ACC
08C3 C0D0       313            PUSH PSW
08C5            314   
08C5            315            ; Increment 16-bit 1ms Counter.
08C5 0531       316            INC Count1ms+0 ; Increment Low 8-bits
08C7 E531       317            MOV a, Count1ms+0 ; Increment High 8-bits if Lower 8-bits Overflow
08C9 7002       318            JNZ Inc_Done
08CB 0532       319            INC Count1ms+1
08CD            320   Inc_Done:
08CD            321   
08CD E539       322            MOV A, Timer_State
08CF B40103     323            CJNE A, #0x01, Continue ; Jump If Not In Timer State
08D2 120669     324            LCALL Inc_PWM
08D5            325   Continue:
08D5            326            ; Check If oNE Second Has Passed
08D5 E531       327            MOV A, Count1ms+0
08D7 B4E83D     328            CJNE A, #LOW(1000), Timer2_ISR_Done
08DA E532       329            MOV A, Count1ms+1
08DC B40338     330            CJNE A, #HIGH(1000), Timer2_ISR_Done
08DF            331   
08DF 12060E     332            LCALL TX_Temp_Oven
08E2 E4         333            CLR A
08E3 F531       334            MOV Count1ms+0, A
08E5 F532       335            MOV Count1ms+1, A
08E7            336            ; Increment the BCD counter
08E7            337   
08E7 B28C       338            cpl TR0
08E9 E536       339            MOV A, BCD_Counter
08EB 2401       340            ADD A, #0x01
08ED D4         341            DA A
08EE F536       342            MOV BCD_Counter, A
08F0            343   
08F0            344   
08F0 F536       345       MOV BCD_Counter, A
08F2 B53822     346            CJNE A, Resulting_Counter, Timer2_ISR_Done ; Skip if BCD_Counter != Resulting_Counter
08F5 E539       347            MOV A, Timer_State
08F7 B4011D     348       CJNE A, #0x01, Timer2_ISR_Done; Skip If We're Not In Timer State
08FA            349   
08FA E530       350            MOV A, STATE_NUM
08FC B40111     351            CJNE A, #0x01, OtherStates ; Skip If Not State 1
08FF            352   
08FF            353   Check_Error_State:
08FF            354            ; Check If Oven Temperature < 50
08FF 120659     355            LCALL Check_Temp_Error
0902 300212     356            JNB Error_Triggered_Flag, Timer2_ISR_Done ; Skip If Oven Temperature <= 50
0905            357   Error_State_Triggered:
0905            358            ;CLR Error_Triggered_Flag
0905 753000     359            MOV STATE_NUM, #0x00
0908 753600     360            MOV BCD_Counter, #0x00
090B D204       361            setb State_TX_Flag
090D 020917     362            LJMP Timer2_ISR_Done
0910            363   OtherStates:
0910 753600     364            MOV BCD_Counter, #0x00
0913 D204       365            setb State_TX_Flag
0915 0530       366            INC STATE_NUM ; Increment State Number
0917            367   Timer2_ISR_Done:
0917 D0D0       368            POP PSW
0919 D0E0       369            POP ACC
091B 32         370            RETI
091C            371   
091C            372   
091C            373   
091C            374   Wait30ms:
091C 7A06       375       MOV R2, #6
091E 79C8       376   W3: MOV R1, #200
0920 7868       377   W2: MOV R0, #104
0922 D8FE       378   W1: djnz R0, W1 ; 4 cycles-> 4 * 60.285ns * 104 = 25us
0924 D9FA       379       djnz R1, W2 ; 25us * 200 = 5.0ms
0926 DAF6       380       djnz R2, W3 ; 5.0ms * 6 = 30ms (Approximately)
0928 22         381       RET
0929            382   
0929            383   StateChanges: ; Check What Counter Number Will Be For Each State
0929 E530       384            MOV A, STATE_NUM
092B B40006     385            CJNE A, #0x00, Next1 ; Jump to Next1 if STATE_NUM is NOT 0
092E            386   
092E 120967     387            LCALL State0
0931 020966     388            LJMP Done_State_Counter
0934            389   Next1:
0934 E530       390            MOV A, STATE_NUM
0936 B40106     391            CJNE A, #0x01, Next2 ; Jump to Next2 if STATE_NUM is NOT 1
0939            392   
0939 120987     393            LCALL State1
093C 020966     394            LJMP Done_State_Counter
093F            395   Next2:
093F E530       396            MOV A, STATE_NUM
0941 B40206     397            CJNE A, #0x02, Next3 ; Jump to Next3 if STATE_NUM is NOT 2
0944            398   
0944 1209A0     399            LCALL State2
0947 020966     400            LJMP Done_State_Counter
094A            401   Next3:
094A E530       402            MOV a, STATE_NUM
094C B40306     403            CJNE a, #0x03, Next4 ; Jump to Next4 if STATE_NUM is NOT 3
094F            404   
094F 1209A7     405            LCALL State3
0952 020966     406            LJMP Done_State_Counter
0955            407   Next4:
0955 E530       408            MOV A, STATE_NUM
0957 B40406     409            CJNE A, #0x04, Next5 ; Jump to Next5 if STATE_NUM is NOT 4
095A            410   
095A 1209C3     411            LCALL State4
095D 020966     412            LJMP Done_State_Counter
0960            413   Next5:
0960 1209CA     414            LCALL State5
0963 020966     415            LJMP Done_State_Counter
0966            416   
0966            417   Done_State_Counter:
0966 22         418            RET
0967            419   
0967            420   State0:
0967            421   
0967 753900     422       MOV Timer_State, #0x00
096A 120682     423       LCALL Power0
096D 12081F     424            LCALL Check_Buttons
0970            425   
0970 208413     426            JB START_BUTTON, Quit0 ; Go to Quit0 If Start Button is NOT Pressed
0973 12091C     427            LCALL Wait30ms
0976 20840D     428            JB START_BUTTON, Quit0
0979            429   
0979            430   
0979 3084FD     431            JNB START_BUTTON, $ ; Go to State1 If Start Button is Pressed
097C 753600     432            MOV BCD_Counter, #0x00
097F 753860     433            MOV Resulting_Counter, #0x60
0982 0530       434            INC STATE_NUM
0984 D204       435            setb State_TX_Flag
0986            436            ;setb TR0
0986            437   Quit0:
0986 22         438            RET
0987            439   
0987            440   State1:
0987 753901     441       MOV Timer_State, #0x01
098A 120685     442       LCALL Power100
098D            443   
098D            444   
098D A93E       445            MOV R1, TEMP_SOAK
098F 12064D     446            LCALL Check_Temp_Oven ; Check If Oven Temperature Reaches 150
0992 20010A     447            JB Below_Temp_Flag, Quit1 ; If Temperature Below then jump to quit1
0995            448   
0995            449            ;CLR Below_Temp_Flag
0995 753600     450            MOV BCD_Counter, #0x00
0998 753890     451            MOV Resulting_Counter, #0x90
099B 0530       452            INC STATE_NUM
099D D204       453            setb State_TX_Flag
099F            454   Quit1:
099F 22         455            RET
09A0            456   
09A0            457   State2:
09A0 120688     458       LCALL Power20 ; Set Power to 20%
09A3 753901     459       MOV Timer_State, #0x01
09A6            460   
09A6            461   
09A6            462   Quit2:
09A6 22         463            RET
09A7            464   
09A7            465   State3:
09A7 120685     466       LCALL Power100 ; Set Power to 100%
09AA 753900     467       MOV Timer_State, #0x00
09AD            468   
09AD            469   
09AD A93F       470            MOV R1, TEMP_REFLOW
09AF 12064D     471            LCALL Check_Temp_Oven
09B2 20010D     472            JB Below_Temp_Flag, Quit3
09B5            473   
09B5            474            ;CLR Below_Temp_Flag
09B5 753901     475       MOV Timer_State, #0x01
09B8 753600     476            MOV BCD_Counter, #0x00
09BB 753860     477            MOV Resulting_Counter, #0x60
09BE 0530       478            INC STATE_NUM
09C0 D204       479            setb State_TX_Flag
09C2            480   Quit3:
09C2 22         481            RET
09C3            482   
09C3            483   State4:
09C3 120688     484       LCALL Power20
09C6 753901     485       MOV Timer_State, #0x01
09C9            486   
09C9            487       ;JB START_BUTTON, Quit4 ; if START BUTTON is NOT PRESSED
09C9            488            ;LCALL Wait30ms
09C9            489            ;JB START_BUTTON, Quit4
09C9            490   
09C9            491            ;JNB START_BUTTON, $ ; if START BUTTON is PRESSED go to State1
09C9            492            ;MOV BCD_Counter, #0x00
09C9            493   Quit4:
09C9 22         494            RET
09CA            495   
09CA            496   State5:
09CA 120682     497       LCALL Power0
09CD 753900     498       MOV Timer_State, #0x00
09D0            499   
09D0 793C       500            MOV R1, #TEMP_DONE
09D2 12064D     501            LCALL Check_Temp_Oven ; Check If Oven Temperature Reaches 60
09D5 30010A     502            JNB Below_Temp_Flag, Quit5  ; IF temperature >= 60, continue in state 5 (0 is above value)
09D8            503   
09D8 C201       504            CLR Below_Temp_Flag
09DA 753000     505            MOV STATE_NUM, #0x00
09DD 753600     506            MOV BCD_Counter, #0x00
09E0 D204       507            setb State_TX_Flag
09E2            508   Quit5:
09E2 22         509            RET
09E3            510   
09E3            511   ;----------------;
09E3            512   ; Initialization ;
09E3            513   ;----------------;
09E3            514   Init_All:
09E3 75AC00     515            MOV     P3M1, #0X00
09E6 75AD00     516            MOV     P3M2, #0X00
09E9            517   
09E9 75B300     518            MOV     P1M1, #0X00
09EC 75B400     519            MOV     P1M2, #0X00
09EF            520   
09EF 75B100     521            MOV     P0M1, #0X00
09F2 75B200     522            MOV     P0M2, #0X00
09F5            523   
09F5 C0E0       524            push acc
09F7 7401       524            mov a, #1
09F9 14         524            dec a
09FA 1200C7     524            lcall ?Set_Cursor_1 ; Select column and row
09FD D0E0       524            pop acc
09FF C083       525            push dph
0A01 C082       525            push dpl
0A03 C0E0       525            push acc
0A05 9006F8     525            mov dptr, #Initial_Message1
0A08 1200BA     525            lcall ?Send_Constant_String
0A0B D0E0       525            pop acc
0A0D D082       525            pop dpl
0A0F D083       525            pop dph
0A11 C0E0       526            push acc
0A13 7401       526            mov a, #1
0A15 14         526            dec a
0A16 1200C5     526            lcall ?Set_Cursor_2 ; Select column and row
0A19 D0E0       526            pop acc
0A1B C083       527            push dph
0A1D C082       527            push dpl
0A1F C0E0       527            push acc
0A21 900709     527            mov dptr, #Initial_Message2
0A24 1200BA     527            lcall ?Send_Constant_String
0A27 D0E0       527            pop acc
0A29 D082       527            pop dpl
0A2B D083       527            pop dph
0A2D 120866     528            LCALL Init_Vars
0A30            529   Init_SerialPort:
0A30            530       ; Configure Serial Port and Baud Rate
0A30            531   
0A30            532       ; Since Reset Button Bounces, Wait a Bit Before Sending Messages.
0A30            533       ; Otherwise, We Risk Sending Garbage to the Serial Port.
0A30 79C8       534       MOV R1, #200
0A32 7868       535       MOV R0, #104
0A34 D8FE       536       DJNZ R0, $ ; 4 Cycles-> 4 * 60.285 ns * 104 = 25 us
0A36 D9FA       537       DJNZ R1, $-4 ; 25us * 200 = 5 ms
0A38            538   
0A38            539   Timer0_Init:
0A38 438E08     540            ORL CKCON, #0B0000_1000 ; Input for Timer 0 is SYSCLK/1.
0A3B            541   
0A3B E589       542            MOV A, TMOD
0A3D 54F0       543            ANL A, #0XF0 ; 1111_0000 Clear Bits for Timer 0
0A3F 4401       544            ORL A, #0X01 ; 0000_0001 Configure Timer 0 as 16-Timer
0A41 F589       545            MOV TMOD, A
0A43            546   
0A43 758CF0     547            MOV TH0, #HIGH(TIMER0_RELOAD)
0A46 758A2C     548            MOV TL0, #LOW(TIMER0_RELOAD)
0A49            549   
0A49            550            ; Enable Timer and Interrupts
0A49 D2A9       551       SETB ET0  ; Enable Timer 0 Interrupt
0A4B D28C       552            setb TR0
0A4D            553   Init_Timer1:
0A4D 438E10     554            ORL     CKCON, #0X10 ; CLK is Input for Timer 1.
0A50 438780     555            ORL     PCON, #0X80 ; Bit SMOD = 1, Double Baud Rate
0A53 759852     556            MOV     SCON, #0X52
0A56 53C4DF     557            ANL     T3CON, #0B1101_1111
0A59 53890F     558            ANL     TMOD, #0X0F ; Clear Configuration Bits for Timer 1
0A5C 438920     559            ORL     TMOD, #0X20 ; Timer 1 Mode 2
0A5F 758DF7     560            MOV     TH1, #TIMER1_RELOAD ; TH1 = TIMER1_RELOAD;
0A62 D28E       561            SETB TR1
0A64            562   Init_ADC:
0A64            563            ; Initialize the pins used by the ADC (P1.1, P1.7, P3.0) as Analog Inputs
0A64 43B382     564            ORL     P1M1, #0B1000_0010
0A67 53B47D     565            ANL     P1M2, #0B0111_1101
0A6A 43AC02     566            ORL     P3M1, #0B0000_0010
0A6D 53ADFD     567            ANL P3M2, #0B1111_1101
0A70            568   
0A70            569            ; AINDIDS Select if Some Pins are Analog Inputs or Digital I/O
0A70 75F600     570            MOV AINDIDS, #0X00 ; Disable All Analog Inputs
0A73 43F683     571            ORL AINDIDS, #0B1000_0011 ; Activate AIN0, AIN1, AIN7
0A76            572   
0A76 43E101     573            ORL ADCCON1, #0X01 ; Enable ADC
0A79            574   Init_Timer2:
0A79 75C800     575            MOV T2CON, #0 ; Stop Timer. Autoreload Mode.
0A7C 75CDBF     576            MOV TH2, #HIGH(TIMER2_RELOAD)
0A7F 75CC28     577            MOV TL2, #LOW(TIMER2_RELOAD)
0A82            578   
0A82            579            ; Set Reload Value
0A82 43C980     580            ORL T2MOD, #0X80 ; Enable Timer 2 Autoreload Mode
0A85 75CBBF     581            MOV RCMP2H, #HIGH(TIMER2_RELOAD)
0A88 75CA28     582            MOV RCMP2L, #LOW(TIMER2_RELOAD)
0A8B            583   
0A8B            584            ; Init 1ms Interrupt Counter. 16-bit Variable with Two 8-bit Parts.
0A8B E4         585            CLR A
0A8C F531       586            MOV Count1ms+0, A
0A8E F532       587            MOV Count1ms+1, A
0A90            588   
0A90            589            ; Enable the Timer and Interrupts.
0A90 439B80     590            ORL EIE, #0X80 ; Enable Timer 2 Interrupt ET2=1
0A93 D2CA       591       SETB TR2  ; Enable Timer 2
0A95 22         592       RET
0A96            593   
0A96            594   Main:
0A96            595            ; Initialization
0A96 75817F     596            MOV SP, #0X7F
0A99 D2AF       597       SETB EA   ; Enable Global interrupts
0A9B 1209E3     598            LCALL Init_All
0A9E 120087     599            LCALL LCD_4BIT
0AA1            600   Forever:
0AA1 12063D     601            LCALL Get_and_Transmit_Temp
0AA4            602            ;LCALL Display_LCDTest
0AA4            603            ;LCALL Display_LCD
0AA4 120725     604            lcall Display_LCDFinal
0AA7 120929     605            LCALL StateChanges
0AAA 120110     606            LCALL TX_StateNumber
0AAD            607   
0AAD C204       608            clr State_TX_Flag
0AAF            609   
0AAF 020AA1     610            LJMP Forever
0AB2            611   
0AB2            612   EN
