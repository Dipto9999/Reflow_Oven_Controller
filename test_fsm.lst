                  2   $LIST
0000              4   
0000              5   ;  N76E003 pinout:
0000              6   ;                               -------
0000              7   ;       PWM2/IC6/T0/AIN4/P0.5 -|1    20|- P0.4/AIN5/STADC/PWM3/IC3
0000              8   ;               TXD/AIN3/P0.6 -|2    19|- P0.3/PWM5/IC5/AIN6
0000              9   ;               RXD/AIN2/P0.7 -|3    18|- P0.2/ICPCK/OCDCK/RXD_1/[SCL]
0000             10   ;                    RST/P2.0 -|4    17|- P0.1/PWM4/IC4/MISO
0000             11   ;        INT0/OSCIN/AIN1/P3.0 -|5    16|- P0.0/PWM3/IC3/MOSI/T1
0000             12   ;              INT1/AIN0/P1.7 -|6    15|- P1.0/PWM2/IC2/SPCLK
0000             13   ;                         GND -|7    14|- P1.1/PWM1/IC1/AIN7/CLO
0000             14   ;[SDA]/TXD_1/ICPDA/OCDDA/P1.6 -|8    13|- P1.2/PWM0/IC0
0000             15   ;                         VDD -|9    12|- P1.3/SCL/[STADC]
0000             16   ;            PWM5/IC7/SS/P1.5 -|10   11|- P1.4/SDA/FB/PWM1
0000             17   ;                               -------
0000             18   ;
0000             19   ; 2 3 4 7 9 19 18 17 16 12 11 15 10 6 5 14 
0000             20   ;-------------------;
0000             21   ; Clock Frequencies ;
0000             22   ;-------------------;
0000             23   
0000             24   CLK               EQU 16600000 ; Microcontroller System Frequency in Hz
0000             25   BAUD              EQU 115200 ; Baud Rate for UART in BPS
0000             26   
0000             27   TIMER0_RATE   EQU 4096     ; 2048Hz Squarewave (Peak Amplitude of CEM-1203 Speaker)
0000             28   TIMER0_RELOAD EQU ((65536-(CLK/TIMER0_RATE)))
0000             29   
0000             30   TIMER1_RELOAD     EQU (0X100 - (CLK / (16 * BAUD)))
0000             31   
0000             32   TIMER2_RATE       EQU 1000     ; 1000Hz, for a timer tick of 1ms
0000             33   TIMER2_RELOAD     EQU ((65536- (CLK/TIMER2_RATE)))
0000             34   
0000             35   ;-------------------;
0000             36   ;- Pin Definitions -;
0000             37   ;-------------------;
0000             38   
0000             39   ; ToDo : Button Multiplexer
0000             40   START_BUTTON       EQU P0.4 ; Pin 20
0000             41   MODE_BUTTON       EQU P1.0 ; Pin 15
0000             42   
0000             43   TENS_BUTTON       EQU P1.2 ; Pin 13
0000             44   ONES_BUTTON       EQU P1.6 ; Pin 8 
0000             45   
0000             46   OUTPUT_PIN             EQU P1.5 ; Pin 10
0000             47   
0000             48   REF_ADC           EQU P1.7 ; Pin 6
0000             49   LM335_ADC                  EQU P3.0 ; Pin 5
0000             50   SPEAKER_OUT       EQU P0.5 ; Pin 1
0000             51   THERMOCOUPLE_ADC  EQU P1.1 ; Pin 14
0000             52   
0000             53   ; Reset vector
0000             54   ORG 0x0000
0000 020A35      55       LJMP Main
0003             56   
0003             57   ; External interrupt 0 vector (not used in this code)
0003             58   ORG 0x0003
0003 32          59            RETI
0004             60   
0004             61   ; Timer/Counter 0 overflow interrupt vector
000B             62   ORG 0x000B
000B 020846      63            ljmp Timer0_ISR
000E             64   
000E             65   ; External interrupt 1 vector (not used in this code)
0013             66   ORG 0x0013
0013 32          67            RETI
0014             68   
0014             69   ; Timer/Counter 1 overflow interrupt vector (not used in this code)
001B             70   ORG 0x001B
001B 32          71            RETI
001C             72   
001C             73   ; Serial port receive/transmit interrupt vector (not used in this code)
0023             74   ORG 0x0023
0023 32          75            RETI
0024             76   
0024             77   ; Timer/Counter 2 overflow interrupt vector
002B             78   ORG 0x002B
002B 02085B      79            LJMP Timer2_ISR
002E             80   
0030             81   DSEG AT 0x30
0030             82   
0030             83   STATE_NUM:                 DS 1 ;
0031             84   
0031             85   Count1ms:             DS 2 ; Used to Determine When 1s Has Passed
0033             86   speaker_counter1ms:    ds 2
0035             87   speaker_counts:            ds 1 ;
0036             88   
0036             89   BCD_Counter:          DS 1 ; The BCD counter incremented in the ISR and displayed in the main loop
0037             90   Current_Counter:           DS 1 ;
0038             91   Resulting_Counter:         DS 1 ;
0039             92   
0039             93   Timer_State:          DS 1 ;
003A             94   Beep_Count:                        DS 1 ;
003B             95   Desired_PWM:               DS 2 ;
003D             96   
003D             97   ;------------------------;
003D             98   ;   Temperature Values   ;
003D             99   ;------------------------;
003D            100   
003D            101   TEMP_ERROR: DS 1
003E            102   TEMP_SOAK:  DS 1
003F            103   TEMP_REFLOW: DS 1
0040            104   
0040            105   TEMP_DONE EQU 60
0040            106   
0040            107   TX_SIZE  EQU 5 ; Size of the Transmit Buffer
0040            108   TX_BUFF: DS TX_SIZE ; Buffer for Transmit Characters
0045            109   
0045            110   X:   DS 4
0049            111   Y:   DS 4
004D            112   BCD: DS 5
0052            113   
0052            114   OVEN_BCD: DS 4
0056            115   
0056            116   VLED_ADC: DS 2
0058            117   
0058            118   LM335_TEMP: DS 4 ; 2 Byte Temperature Value With 0.01 Degree Resolution
005C            119   THERMOCOUPLE_TEMP: DS 4 ; 2 Byte Temperature Value With 0.01 Degree Resolution
0060            120   OVEN_TEMP: DS 1 ; 1 Byte Temperature Value With 1 Degree Resolution
0061            121   
0061            122   Output_Voltage: DS 4
0065            123   
0000            124   BSEG
0000            125   MF: DBIT 1
0001            126   
0001            127   Below_Temp_Flag: DBIT 1
0002            128   Error_Triggered_Flag: DBIT 1
0003            129   
0003            130   Speaker_En_Flag:   DBIT 1
0004            131   
0110             64   $LIST
                546   $LIST
067C            317   $LIST
06A2             37   $LIST
                138   $LIST
070B            140   
070B 546F3D20   141   Initial_Message1:  db 'To= xxC  Tj=xxC ', 0
     78784320
     20546A3D
     78784320
     00
071C 73787878   142   Initial_Message2:  db 'sxxx.00 rxxx.00 ', 0
     2E303020
     72787878
     2E303020
     00
072D            143   
072D            144   CSEG
072D            145   
072D 54633D00   146   Tc_MSG: DB 'Tc=', 0
0731 546A3D00   147   Tj_MSG: DB 'Tj=', 0
0735            148   
0735            149   LCD_RS EQU P1.3 ; Pin 12
0735            150   LCD_E  EQU P1.4 ; Pin 11
0735            151   LCD_D4 EQU P0.0 ; Pin 16
0735            152   LCD_D5 EQU P0.1 ; Pin 15
0735            153   LCD_D6 EQU P0.2 ; Pin 18
0735            154   LCD_D7 EQU P0.3 ; Pin 19
0735            155   
0735            156   Display_LCD:
0735 C0E0       157            push acc
0737 7401       157            mov a, #1
0739 14         157            dec a
073A 1200C7     157            lcall ?Set_Cursor_1 ; Select column and row
073D D0E0       157            pop acc
073F C000       158            push ar0
0741 A830       158            mov r0, STATE_NUM
0743 1200CC     158            lcall ?Display_BCD
0746 D000       158            pop ar0
0748 1204ED     159            lcall Display_LM335_Temperature
074B 120551     160            lcall Display_Oven_Temperature
074E 1205DD     161            lcall Display_Reflow_Temperature
0751 1205B1     162            lcall Display_Soak_Temperature
0754            163   
0754 C0E0       164            push acc
0756 7401       164            mov a, #1
0758 14         164            dec a
0759 1200C7     164            lcall ?Set_Cursor_1 ; Select column and row
075C D0E0       164            pop acc
075E C083       165            push dph
0760 C082       165            push dpl
0762 C0E0       165            push acc
0764 90072D     165            mov dptr, #Tc_MSG
0767 1200BA     165            lcall ?Send_Constant_String
076A D0E0       165            pop acc
076C D082       165            pop dpl
076E D083       165            pop dph
0770            166   
0770 C0E0       167            push acc
0772 740A       167            mov a, #10
0774 14         167            dec a
0775 1200C7     167            lcall ?Set_Cursor_1 ; Select column and row
0778 D0E0       167            pop acc
077A C083       168            push dph
077C C082       168            push dpl
077E C0E0       168            push acc
0780 900731     168            mov dptr, #Tj_MSG
0783 1200BA     168            lcall ?Send_Constant_String
0786 D0E0       168            pop acc
0788 D082       168            pop dpl
078A D083       168            pop dph
078C            169   
078C C0E0       170            push acc
078E 7401       170            mov a, #1
0790 14         170            dec a
0791 1200C5     170            lcall ?Set_Cursor_2 ; Select column and row
0794 D0E0       170            pop acc
0796 C0E0       171            push acc
0798 7473       171            mov a, #'s'
079A 12007D     171            lcall ?WriteData
079D D0E0       171            pop acc
079F            172   
079F C0E0       173            push acc
07A1 7405       173            mov a, #5
07A3 14         173            dec a
07A4 1200C5     173            lcall ?Set_Cursor_2 ; Select column and row
07A7 D0E0       173            pop acc
07A9 C0E0       174            push acc
07AB 7472       174            mov a, #'r'
07AD 12007D     174            lcall ?WriteData
07B0 D0E0       174            pop acc
07B2            175   
07B2 22         176            RET
07B3            177   
07B3            178   Display_LCDTest:
07B3 1204ED     179            lcall Display_LM335_Temperature
07B6 12051F     180            lcall Display_Thermocouple_Temperature
07B9 120551     181            lcall Display_Oven_Temperature
07BC            182   
07BC            183            ; Set_Cursor(1,1)
07BC            184       ; Display_BCD(STATE_NUM)
07BC            185   
07BC            186            ; Set_Cursor(2,1)
07BC            187       ; Display_BCD(BCD_Counter)
07BC            188            ; Set_Cursor(2,5)
07BC            189            ; Display_BCD(Resulting_Counter)
07BC            190   
07BC            191            ; lcall Display_SpeakerFlag
07BC            192            ; lcall Display_BelowFlag
07BC            193   
07BC            194            ; LCALL Display_Output_Voltage
07BC            195   
07BC 22         196            RET
07BD            197   
07BD            198   Check_Buttons:
07BD 20921B     199            jb TENS_BUTTON, onesbutton
07C0 1208B4     200            lcall Wait30ms
07C3 209215     201            jb TENS_BUTTON, onesbutton
07C6            202   
07C6 3092FD     203            jnb TENS_BUTTON, $
07C9 309009     204            jnb MODE_BUTTON, reflowaddten; if MODE BUTTON IS PRESSED, jump
07CC E53E       205            mov a, TEMP_SOAK
07CE 240A       206            add a, #0x0A
07D0 F53E       207            mov TEMP_SOAK, a
07D2 0207DB     208            ljmp onesbutton
07D5            209   reflowaddten:
07D5 E53F       210            mov a, TEMP_REFLOW
07D7 240A       211            add a, #0x0A
07D9 F53F       212            mov TEMP_REFLOW, a
07DB            213   onesbutton:
07DB 20961B     214            jb ONES_BUTTON, done_check_button
07DE 1208B4     215            lcall Wait30ms
07E1 209615     216            jb ONES_BUTTON, done_check_button
07E4            217   
07E4 3096FD     218            jnb ONES_BUTTON, $
07E7 309009     219            jnb MODE_BUTTON, reflowaddone; if MODE BUTTON IS PRESSED, jump
07EA E53E       220            mov a, TEMP_SOAK
07EC 2401       221            add a, #0x01
07EE F53E       222            mov TEMP_SOAK, a
07F0 0207F9     223            ljmp done_check_button
07F3            224   reflowaddone:
07F3 E53F       225            mov a, TEMP_REFLOW
07F5 2401       226            add a, #0x01
07F7 F53F       227            mov TEMP_REFLOW, a
07F9            228   done_check_button:
07F9 E53F       229            mov a, TEMP_REFLOW
07FB 953E       230            subb a, TEMP_SOAK ; if REFLOW - SOAK = + we good
07FD 5004       231            jnc done_reflow_and_soak_temp_check ; 
07FF E53F       232            mov a, TEMP_REFLOW
0801 F53E       233            mov TEMP_SOAK, a
0803            234   done_reflow_and_soak_temp_check:         
0803 22         235            ret
0804            236   
0804            237   Init_Vars:
0804            238       ; Initial Values at State 0
0804 753002     239            MOV STATE_NUM, #0x02
0807            240   
0807 753D32     241            MOV TEMP_ERROR, #50
080A 753E91     242            MOV TEMP_SOAK, #145
080D 753FD9     243            MOV TEMP_REFLOW, #217
0810            244   
0810 755600     245            MOV VLED_ADC+0, #0
0813 755700     246            MOV VLED_ADC+1, #0
0816            247   
0816 755800     248            MOV LM335_TEMP+0, #0
0819 755900     249            MOV LM335_TEMP+1, #0
081C            250   
081C 755C00     251            MOV THERMOCOUPLE_TEMP+0, #0
081F 755D00     252            MOV THERMOCOUPLE_TEMP+1, #0
0822            253   Reset_Vars:
0822 753600     254            MOV BCD_Counter, #0x00
0825 753800     255            MOV Resulting_Counter, #0x00
0828 753B00     256       MOV Desired_PWM+0, #0x00
082B 753C00     257       MOV Desired_PWM+1, #0x00
082E            258   
082E 753500     259            mov speaker_counts, #0x00
0831 753300     260            mov speaker_counter1ms, #0x00
0834 753400     261            mov speaker_counter1ms+1, #0x00
0837            262   
0837 C295       263       clr OUTPUT_PIN
0839 D284       264            SETB START_BUTTON
083B D292       265            setb TENS_BUTTON
083D D296       266            setb ONES_BUTTON
083F D290       267            setb MODE_BUTTON
0841 C201       268            CLR Below_Temp_Flag
0843 C202       269            CLR Error_Triggered_Flag
0845            270   
0845 22         271            RET
0846            272   
0846            273   Timer0_ISR:
0846            274            ; Save Registers to Stack.
0846 C0E0       275       PUSH ACC
0848 C0D0       276            PUSH PSW
084A            277   
084A            278            
084A C28C       279            CLR TR0
084C 758CF0     280            MOV TH0, #HIGH(TIMER0_RELOAD)
084F 758A2C     281            MOV TL0, #LOW(TIMER0_RELOAD)
0852 D28C       282            SETB TR0
0854            283   
0854 B285       284            CPL SPEAKER_OUT ; Toggle the Alarm Out Pin
0856 D0D0       285            POP PSW
0858 D0E0       286            POP ACC
085A            287   
085A 32         288            RETI
085B            289   ;-------------;
085B            290   ; Timer 2 ISR ;
085B            291   ;-------------;
085B            292   
085B            293   Timer2_ISR:
085B C2CF       294            CLR TF2  ; Timer 2 Doesn't Clear TF2 Automatically. Do it in the ISR.  It is Bit Addressable.
085D            295   
085D            296            ; Save Registers to Stack
085D C0E0       297            PUSH ACC
085F C0D0       298            PUSH PSW
0861            299   
0861            300            ; Increment 16-bit 1ms Counter.
0861 0531       301            INC Count1ms+0 ; Increment Low 8-bits
0863 E531       302            MOV a, Count1ms+0 ; Increment High 8-bits if Lower 8-bits Overflow
0865 7002       303            JNZ Inc_Done
0867 0532       304            INC Count1ms+1
0869            305   Inc_Done:
0869            306            
0869 E539       307            MOV A, Timer_State
086B B40103     308            CJNE A, #0x01, Continue ; Jump If Not In Timer State
086E 12067C     309            LCALL Inc_PWM
0871            310   Continue:
0871            311            ; Check If oNE Second Has Passed
0871 E531       312            MOV A, Count1ms+0
0873 B4E839     313            CJNE A, #LOW(1000), Timer2_ISR_Done
0876 E532       314            MOV A, Count1ms+1
0878 B40334     315            CJNE A, #HIGH(1000), Timer2_ISR_Done
087B            316   
087B 120609     317            LCALL TX_Temp_Oven
087E E4         318            CLR A
087F F531       319            MOV Count1ms+0, A
0881 F532       320            MOV Count1ms+1, A
0883            321            ; Increment the BCD counter
0883            322   
0883 B28C       323            cpl TR0
0885 E536       324            MOV A, BCD_Counter
0887 2401       325            ADD A, #0x01
0889 D4         326            DA A
088A F536       327            MOV BCD_Counter, A
088C            328   
088C            329   
088C F536       330       MOV BCD_Counter, A
088E B5381E     331            CJNE A, Resulting_Counter, Timer2_ISR_Done ; Skip if BCD_Counter != Resulting_Counter
0891 E539       332            MOV A, Timer_State
0893 B40119     333       CJNE A, #0x01, Timer2_ISR_Done; Skip If We're Not In Timer State
0896            334   
0896 E530       335            MOV A, STATE_NUM
0898 B4010F     336            CJNE A, #0x01, OtherStates ; Skip If Not State 1
089B            337   
089B            338   Check_Error_State:
089B            339            ; Check If Oven Temperature < 50
089B 12066C     340            LCALL Check_Temp_Error
089E 30020E     341            JNB Error_Triggered_Flag, Timer2_ISR_Done ; Skip If Oven Temperature <= 50      
08A1            342   Error_State_Triggered:
08A1            343            ;CLR Error_Triggered_Flag
08A1 753000     344            MOV STATE_NUM, #0x00
08A4 753600     345            MOV BCD_Counter, #0x00
08A7            346   
08A7 0208AF     347            LJMP Timer2_ISR_Done
08AA            348   OtherStates:
08AA 753600     349            MOV BCD_Counter, #0x00
08AD 0530       350            INC STATE_NUM ; Increment State Number
08AF            351   Timer2_ISR_Done:
08AF D0D0       352            POP PSW
08B1 D0E0       353            POP ACC
08B3 32         354            RETI
08B4            355   
08B4            356   
08B4            357   
08B4            358   Wait30ms:
08B4 7A06       359       MOV R2, #6
08B6 79C8       360   W3: MOV R1, #200
08B8 7868       361   W2: MOV R0, #104
08BA D8FE       362   W1: djnz R0, W1 ; 4 cycles-> 4 * 60.285ns * 104 = 25us
08BC D9FA       363       djnz R1, W2 ; 25us * 200 = 5.0ms
08BE DAF6       364       djnz R2, W3 ; 5.0ms * 6 = 30ms (Approximately)
08C0 22         365       RET
08C1            366   
08C1            367   StateChanges: ; Check What Counter Number Will Be For Each State
08C1 E530       368            MOV A, STATE_NUM
08C3 B40006     369            CJNE A, #0x00, Next1 ; Jump to Next1 if STATE_NUM is NOT 0
08C6            370   
08C6 1208FF     371            LCALL State0
08C9 0208FE     372            LJMP Done_State_Counter
08CC            373   Next1:
08CC E530       374            MOV A, STATE_NUM
08CE B40106     375            CJNE A, #0x01, Next2 ; Jump to Next2 if STATE_NUM is NOT 1
08D1            376   
08D1 12091D     377            LCALL State1
08D4 0208FE     378            LJMP Done_State_Counter
08D7            379   Next2:
08D7 E530       380            MOV A, STATE_NUM
08D9 B40206     381            CJNE A, #0x02, Next3 ; Jump to Next3 if STATE_NUM is NOT 2
08DC            382   
08DC 120934     383            LCALL State2
08DF 0208FE     384            LJMP Done_State_Counter
08E2            385   Next3:
08E2 E530       386            MOV a, STATE_NUM
08E4 B40306     387            CJNE a, #0x03, Next4 ; Jump to Next4 if STATE_NUM is NOT 3
08E7            388   
08E7 12094A     389            LCALL State3
08EA 0208FE     390            LJMP Done_State_Counter
08ED            391   Next4:
08ED E530       392            MOV A, STATE_NUM
08EF B40406     393            CJNE A, #0x04, Next5 ; Jump to Next5 if STATE_NUM is NOT 4
08F2            394   
08F2 120964     395            LCALL State4
08F5 0208FE     396            LJMP Done_State_Counter
08F8            397   Next5:
08F8 12096B     398            LCALL State5
08FB 0208FE     399            LJMP Done_State_Counter
08FE            400   
08FE            401   Done_State_Counter:
08FE 22         402            RET
08FF            403   
08FF            404   State0:
08FF            405   
08FF 753900     406       MOV Timer_State, #0x00
0902 120695     407       LCALL Power0
0905 1207BD     408            LCALL Check_Buttons
0908            409   
0908 208411     410            JB START_BUTTON, Quit0 ; Go to Quit0 If Start Button is NOT Pressed
090B 1208B4     411            LCALL Wait30ms
090E 20840B     412            JB START_BUTTON, Quit0
0911            413   
0911            414            
0911 3084FD     415            JNB START_BUTTON, $ ; Go to State1 If Start Button is Pressed
0914 753600     416            MOV BCD_Counter, #0x00
0917 753806     417            MOV Resulting_Counter, #0x06
091A 0530       418            INC STATE_NUM
091C            419            ;setb TR0
091C            420   Quit0:
091C 22         421            RET
091D            422   
091D            423   State1:
091D 753901     424       MOV Timer_State, #0x01
0920 120698     425       LCALL Power100
0923            426            
0923 A93E       427            MOV R1, TEMP_SOAK
0925 120660     428            LCALL Check_Temp_Oven ; Check If Oven Temperature Reaches 150
0928 200108     429            JB Below_Temp_Flag, Quit1 ; If Temperature Below then jump to quit1
092B            430   
092B            431            ;CLR Below_Temp_Flag
092B 753600     432            MOV BCD_Counter, #0x00
092E 753806     433            MOV Resulting_Counter, #0x06
0931 0530       434            INC STATE_NUM
0933            435   Quit1:
0933 22         436            RET
0934            437   
0934            438   State2:
0934 12069B     439       LCALL Power20 ; Set Power to 20%
0937 753901     440       MOV Timer_State, #0x01
093A 20840C     441       JB START_BUTTON, Quit2 ; Go to Quit2 If Start Button is NOT Pressed
093D 1208B4     442            LCALL Wait30ms
0940 208406     443            JB START_BUTTON, Quit2
0943            444   
0943 3084FD     445            JNB START_BUTTON, $ ; Go to State3 If Start Button is Pressed
0946 753900     446       MOV Timer_State, #0x00
0949            447   Quit2:
0949 22         448            RET
094A            449   
094A            450   State3:
094A 120698     451       LCALL Power100 ; Set Power to 100%
094D 753900     452       MOV Timer_State, #0x00
0950            453   
0950 A93F       454            MOV R1, TEMP_REFLOW
0952 120660     455            LCALL Check_Temp_Oven
0955 20010B     456            JB Below_Temp_Flag, Quit3
0958            457            
0958            458            ;CLR Below_Temp_Flag    
0958 753901     459       MOV Timer_State, #0x01
095B 753600     460            MOV BCD_Counter, #0x00
095E 753807     461            MOV Resulting_Counter, #0x07
0961 0530       462            INC STATE_NUM
0963            463   Quit3:
0963 22         464            RET
0964            465   
0964            466   State4:
0964 12069B     467       LCALL Power20
0967 753901     468       MOV Timer_State, #0x01
096A            469       ;JB START_BUTTON, Quit4 ; if START BUTTON is NOT PRESSED
096A            470            ;LCALL Wait30ms
096A            471            ;JB START_BUTTON, Quit4
096A            472   
096A            473            ;JNB START_BUTTON, $ ; if START BUTTON is PRESSED go to State1
096A            474            ;MOV BCD_Counter, #0x00
096A            475   Quit4:
096A 22         476            RET
096B            477   
096B            478   State5:
096B 120695     479       LCALL Power0
096E 753900     480       MOV Timer_State, #0x00
0971            481   
0971 793C       482            MOV R1, #TEMP_DONE
0973 120660     483            LCALL Check_Temp_Oven ; Check If Oven Temperature Reaches 60
0976 300108     484            JNB Below_Temp_Flag, Quit5  ; IF temperature >= 60, continue in state 5 (0 is above value)
0979            485   
0979 C201       486            CLR Below_Temp_Flag
097B 753000     487            MOV STATE_NUM, #0x00
097E 753600     488            MOV BCD_Counter, #0x00
0981            489   Quit5:
0981 22         490            RET
0982            491   
0982            492   ;----------------;
0982            493   ; Initialization ;
0982            494   ;----------------;
0982            495   Init_All:
0982 75AC00     496            MOV     P3M1, #0X00
0985 75AD00     497            MOV     P3M2, #0X00
0988            498   
0988 75B300     499            MOV     P1M1, #0X00
098B 75B400     500            MOV     P1M2, #0X00
098E            501   
098E 75B100     502            MOV     P0M1, #0X00
0991 75B200     503            MOV     P0M2, #0X00
0994            504   
0994 C0E0       505            push acc
0996 7401       505            mov a, #1
0998 14         505            dec a
0999 1200C7     505            lcall ?Set_Cursor_1 ; Select column and row
099C D0E0       505            pop acc
099E C083       506            push dph
09A0 C082       506            push dpl
09A2 C0E0       506            push acc
09A4 90070B     506            mov dptr, #Initial_Message1
09A7 1200BA     506            lcall ?Send_Constant_String
09AA D0E0       506            pop acc
09AC D082       506            pop dpl
09AE D083       506            pop dph
09B0 C0E0       507            push acc
09B2 7401       507            mov a, #1
09B4 14         507            dec a
09B5 1200C5     507            lcall ?Set_Cursor_2 ; Select column and row
09B8 D0E0       507            pop acc
09BA C083       508            push dph
09BC C082       508            push dpl
09BE C0E0       508            push acc
09C0 90071C     508            mov dptr, #Initial_Message2
09C3 1200BA     508            lcall ?Send_Constant_String
09C6 D0E0       508            pop acc
09C8 D082       508            pop dpl
09CA D083       508            pop dph
09CC            509   
09CC 120804     510            LCALL Init_Vars
09CF            511   Init_SerialPort:
09CF            512       ; Configure Serial Port and Baud Rate
09CF            513   
09CF            514       ; Since Reset Button Bounces, Wait a Bit Before Sending Messages.
09CF            515       ; Otherwise, We Risk Sending Garbage to the Serial Port.
09CF 79C8       516       MOV R1, #200
09D1 7868       517       MOV R0, #104
09D3 D8FE       518       DJNZ R0, $ ; 4 Cycles-> 4 * 60.285 ns * 104 = 25 us
09D5 D9FA       519       DJNZ R1, $-4 ; 25us * 200 = 5 ms
09D7            520   
09D7            521   Timer0_Init:
09D7 438E08     522            ORL CKCON, #0B0000_1000 ; Input for Timer 0 is SYSCLK/1.
09DA            523   
09DA E589       524            MOV A, TMOD
09DC 54F0       525            ANL A, #0XF0 ; 1111_0000 Clear Bits for Timer 0
09DE 4401       526            ORL A, #0X01 ; 0000_0001 Configure Timer 0 as 16-Timer
09E0 F589       527            MOV TMOD, A
09E2            528   
09E2 758CF0     529            MOV TH0, #HIGH(TIMER0_RELOAD)
09E5 758A2C     530            MOV TL0, #LOW(TIMER0_RELOAD)
09E8            531   
09E8            532            ; Enable Timer and Interrupts
09E8 D2A9       533       SETB ET0  ; Enable Timer 0 Interrupt
09EA D28C       534            setb TR0
09EC            535   Init_Timer1:
09EC 438E10     536            ORL     CKCON, #0X10 ; CLK is Input for Timer 1.
09EF 438780     537            ORL     PCON, #0X80 ; Bit SMOD = 1, Double Baud Rate
09F2 759852     538            MOV     SCON, #0X52
09F5 53C4DF     539            ANL     T3CON, #0B1101_1111
09F8 53890F     540            ANL     TMOD, #0X0F ; Clear Configuration Bits for Timer 1
09FB 438920     541            ORL     TMOD, #0X20 ; Timer 1 Mode 2
09FE 758DF7     542            MOV     TH1, #TIMER1_RELOAD ; TH1 = TIMER1_RELOAD;
0A01 D28E       543            SETB TR1
0A03            544   Init_ADC:
0A03            545            ; Initialize the pins used by the ADC (P1.1, P1.7, P3.0) as Analog Inputs
0A03 43B382     546            ORL     P1M1, #0B1000_0010
0A06 53B47D     547            ANL     P1M2, #0B0111_1101
0A09 43AC02     548            ORL     P3M1, #0B0000_0010
0A0C 53ADFD     549            ANL P3M2, #0B1111_1101
0A0F            550   
0A0F            551            ; AINDIDS Select if Some Pins are Analog Inputs or Digital I/O
0A0F 75F600     552            MOV AINDIDS, #0X00 ; Disable All Analog Inputs
0A12 43F683     553            ORL AINDIDS, #0B1000_0011 ; Activate AIN0, AIN1, AIN7
0A15            554   
0A15 43E101     555            ORL ADCCON1, #0X01 ; Enable ADC
0A18            556   Init_Timer2:
0A18 75C800     557            MOV T2CON, #0 ; Stop Timer. Autoreload Mode.
0A1B 75CDBF     558            MOV TH2, #HIGH(TIMER2_RELOAD)
0A1E 75CC28     559            MOV TL2, #LOW(TIMER2_RELOAD)
0A21            560   
0A21            561            ; Set Reload Value
0A21 43C980     562            ORL T2MOD, #0X80 ; Enable Timer 2 Autoreload Mode
0A24 75CBBF     563            MOV RCMP2H, #HIGH(TIMER2_RELOAD)
0A27 75CA28     564            MOV RCMP2L, #LOW(TIMER2_RELOAD)
0A2A            565   
0A2A            566            ; Init 1ms Interrupt Counter. 16-bit Variable with Two 8-bit Parts.
0A2A E4         567            CLR A
0A2B F531       568            MOV Count1ms+0, A
0A2D F532       569            MOV Count1ms+1, A
0A2F            570   
0A2F            571            ; Enable the Timer and Interrupts.
0A2F 439B80     572            ORL EIE, #0X80 ; Enable Timer 2 Interrupt ET2=1
0A32 D2CA       573       SETB TR2  ; Enable Timer 2
0A34 22         574       RET
0A35            575   
0A35            576   Main:
0A35            577            ; Initialization
0A35 75817F     578            MOV SP, #0X7F
0A38 D2AF       579       SETB EA   ; Enable Global interrupts
0A3A 120982     580            LCALL Init_All
0A3D 120087     581            LCALL LCD_4BIT
0A40            582   Forever:
0A40 120650     583            LCALL Get_and_Transmit_Temp
0A43 1207B3     584            LCALL Display_LCDTest
0A46            585            ;LCALL Display_LCD
0A46 1208C1     586            LCALL StateChanges
0A49            587   
0A49 020A40     588            LJMP Forever
0A4C            589   
0A4C            590   EN
