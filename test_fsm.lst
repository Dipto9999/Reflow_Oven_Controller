                  2   $LIST
0000              4   
0000              5   ;  N76E003 pinout:
0000              6   ;                               -------
0000              7   ;       PWM2/IC6/T0/AIN4/P0.5 -|1    20|- P0.4/AIN5/STADC/PWM3/IC3
0000              8   ;               TXD/AIN3/P0.6 -|2    19|- P0.3/PWM5/IC5/AIN6
0000              9   ;               RXD/AIN2/P0.7 -|3    18|- P0.2/ICPCK/OCDCK/RXD_1/[SCL]
0000             10   ;                    RST/P2.0 -|4    17|- P0.1/PWM4/IC4/MISO
0000             11   ;        INT0/OSCIN/AIN1/P3.0 -|5    16|- P0.0/PWM3/IC3/MOSI/T1
0000             12   ;              INT1/AIN0/P1.7 -|6    15|- P1.0/PWM2/IC2/SPCLK
0000             13   ;                         GND -|7    14|- P1.1/PWM1/IC1/AIN7/CLO
0000             14   ;[SDA]/TXD_1/ICPDA/OCDDA/P1.6 -|8    13|- P1.2/PWM0/IC0
0000             15   ;                         VDD -|9    12|- P1.3/SCL/[STADC]
0000             16   ;            PWM5/IC7/SS/P1.5 -|10   11|- P1.4/SDA/FB/PWM1
0000             17   ;                               -------
0000             18   ;
0000             19   ; 2 3 4 7 9 19 18 17 16 12 11 15 10 6 5 14 
0000             20   ;-------------------;
0000             21   ; Clock Frequencies ;
0000             22   ;-------------------;
0000             23   
0000             24   CLK               EQU 16600000 ; Microcontroller System Frequency in Hz
0000             25   BAUD              EQU 115200 ; Baud Rate for UART in BPS
0000             26   
0000             27   TIMER0_RATE   EQU 4096     ; 2048Hz Squarewave (Peak Amplitude of CEM-1203 Speaker)
0000             28   TIMER0_RELOAD EQU ((65536-(CLK/TIMER0_RATE)))
0000             29   
0000             30   TIMER1_RELOAD     EQU (0X100 - (CLK / (16 * BAUD)))
0000             31   
0000             32   TIMER2_RATE       EQU 1000     ; 1000Hz, for a timer tick of 1ms
0000             33   TIMER2_RELOAD     EQU ((65536- (CLK/TIMER2_RATE)))
0000             34   
0000             35   ;-------------------;
0000             36   ;- Pin Definitions -;
0000             37   ;-------------------;
0000             38   
0000             39   ; ToDo : Button Multiplexer
0000             40   START_BUTTON       EQU P0.4 ; Pin 20
0000             41   MODE_BUTTON       EQU P1.0 ; Pin 15
0000             42   
0000             43   TENS_BUTTON       EQU P1.2 ; Pin 13
0000             44   ONES_BUTTON       EQU P1.6 ; Pin 8 
0000             45   
0000             46   OUTPUT_PIN             EQU P1.5 ; Pin 10
0000             47   
0000             48   REF_ADC           EQU P1.7 ; Pin 6
0000             49   LM335_ADC                  EQU P3.0 ; Pin 5
0000             50   SPEAKER_OUT       EQU P0.5 ; Pin 1
0000             51   THERMOCOUPLE_ADC  EQU P1.1 ; Pin 14
0000             52   
0000             53   ; Reset vector
0000             54   ORG 0x0000
0000 020A35      55       LJMP Main
0003             56   
0003             57   ; External interrupt 0 vector (not used in this code)
0003             58   ORG 0x0003
0003 32          59            RETI
0004             60   
0004             61   ; Timer/Counter 0 overflow interrupt vector
000B             62   ORG 0x000B
000B 020855      63            ljmp Timer0_ISR
000E             64   
000E             65   ; External interrupt 1 vector (not used in this code)
0013             66   ORG 0x0013
0013 32          67            RETI
0014             68   
0014             69   ; Timer/Counter 1 overflow interrupt vector (not used in this code)
001B             70   ORG 0x001B
001B 32          71            RETI
001C             72   
001C             73   ; Serial port receive/transmit interrupt vector (not used in this code)
0023             74   ORG 0x0023
0023 32          75            RETI
0024             76   
0024             77   ; Timer/Counter 2 overflow interrupt vector
002B             78   ORG 0x002B
002B 02086A      79            LJMP Timer2_ISR
002E             80   
0030             81   DSEG AT 0x30
0030             82   
0030             83   STATE_NUM:                 DS 1 ;
0031             84   
0031             85   Count1ms:             DS 2 ; Used to Determine When 1s Has Passed
0033             86   speaker_counter1ms:    ds 2
0035             87   speaker_counts:            ds 1 ;
0036             88   
0036             89   BCD_Counter:          DS 1 ; The BCD counter incremented in the ISR and displayed in the main loop
0037             90   Current_Counter:           DS 1 ;
0038             91   Resulting_Counter:         DS 1 ;
0039             92   
0039             93   Timer_State:          DS 1 ;
003A             94   Beep_Count:                        DS 1 ;
003B             95   Desired_PWM:               DS 2 ;
003D             96   
003D             97   ;------------------------;
003D             98   ;   Temperature Values   ;
003D             99   ;------------------------;
003D            100   
003D            101   TEMP_ERROR: DS 1
003E            102   TEMP_SOAK:  DS 1
003F            103   TEMP_REFLOW: DS 1
0040            104   
0040            105   TEMP_DONE EQU 60
0040            106   
0040            107   TX_SIZE  EQU 5 ; Size of the Transmit Buffer
0040            108   TX_BUFF: DS TX_SIZE ; Buffer for Transmit Characters
0045            109   
0045            110   X:   DS 4
0049            111   Y:   DS 4
004D            112   BCD: DS 5
0052            113   
0052            114   OVEN_BCD: DS 4
0056            115   
0056            116   Output_Voltage: DS 4
005A            117   VLED_ADC: DS 2
005C            118   
005C            119   LM335_TEMP: DS 4 ; 2 Byte Temperature Value With 0.01 Degree Resolution
0060            120   THERMOCOUPLE_TEMP: DS 4 ; 2 Byte Temperature Value With 0.01 Degree Resolution
0064            121   OVEN_TEMP: DS 1 ; 1 Byte Temperature Value With 1 Degree Resolution
0065            122   
0065            123   
0000            124   BSEG
0000            125   MF: DBIT 1
0001            126   
0001            127   Below_Temp_Flag: DBIT 1
0002            128   Error_Triggered_Flag: DBIT 1
0003            129   
0003            130   Speaker_En_Flag:   DBIT 1
0004            131   
0110             64   $LIST
                546   $LIST
0652            308   $LIST
0678             37   $LIST
                138   $LIST
06E1            140   
06E1 546F3D20   141   Initial_Message1:  db 'To= xxC  Tj=xxC ', 0
     78784320
     20546A3D
     78784320
     00
06F2 73787878   142   Initial_Message2:  db 'sxxx.00 rxxx.00 ', 0
     2E303020
     72787878
     2E303020
     00
0703            143   
0703            144   CSEG
0703            145   
0703 54633D00   146   Tc_MSG: DB 'Tc=', 0
0707 546A3D00   147   Tj_MSG: DB 'Tj=', 0
070B            148   
070B            149   LCD_RS EQU P1.3 ; Pin 12
070B            150   LCD_E  EQU P1.4 ; Pin 11
070B            151   LCD_D4 EQU P0.0 ; Pin 16
070B            152   LCD_D5 EQU P0.1 ; Pin 15
070B            153   LCD_D6 EQU P0.2 ; Pin 18
070B            154   LCD_D7 EQU P0.3 ; Pin 19
070B            155   
070B            156   Display_LCD:
070B C0E0       157            push acc
070D 7401       157            mov a, #1
070F 14         157            dec a
0710 1200C7     157            lcall ?Set_Cursor_1 ; Select column and row
0713 D0E0       157            pop acc
0715 C000       158            push ar0
0717 A830       158            mov r0, STATE_NUM
0719 1200CC     158            lcall ?Display_BCD
071C D000       158            pop ar0
071E 1204E4     159            lcall Display_LM335_Temperature
0721 120536     160            lcall Display_Oven_Temperature
0724 1205CB     161            lcall Display_Reflow_Temperature
0727 12059F     162            lcall Display_Soak_Temperature
072A            163   
072A C0E0       164            push acc
072C 7401       164            mov a, #1
072E 14         164            dec a
072F 1200C7     164            lcall ?Set_Cursor_1 ; Select column and row
0732 D0E0       164            pop acc
0734 C083       165            push dph
0736 C082       165            push dpl
0738 C0E0       165            push acc
073A 900703     165            mov dptr, #Tc_MSG
073D 1200BA     165            lcall ?Send_Constant_String
0740 D0E0       165            pop acc
0742 D082       165            pop dpl
0744 D083       165            pop dph
0746            166   
0746 C0E0       167            push acc
0748 740A       167            mov a, #10
074A 14         167            dec a
074B 1200C7     167            lcall ?Set_Cursor_1 ; Select column and row
074E D0E0       167            pop acc
0750 C083       168            push dph
0752 C082       168            push dpl
0754 C0E0       168            push acc
0756 900707     168            mov dptr, #Tj_MSG
0759 1200BA     168            lcall ?Send_Constant_String
075C D0E0       168            pop acc
075E D082       168            pop dpl
0760 D083       168            pop dph
0762            169   
0762 C0E0       170            push acc
0764 7401       170            mov a, #1
0766 14         170            dec a
0767 1200C5     170            lcall ?Set_Cursor_2 ; Select column and row
076A D0E0       170            pop acc
076C C0E0       171            push acc
076E 7473       171            mov a, #'s'
0770 12007D     171            lcall ?WriteData
0773 D0E0       171            pop acc
0775            172   
0775 C0E0       173            push acc
0777 7405       173            mov a, #5
0779 14         173            dec a
077A 1200C5     173            lcall ?Set_Cursor_2 ; Select column and row
077D D0E0       173            pop acc
077F C0E0       174            push acc
0781 7472       174            mov a, #'r'
0783 12007D     174            lcall ?WriteData
0786 D0E0       174            pop acc
0788            175   
0788 22         176            RET
0789            177   
0789            178   Display_LCDTest:
0789 1204E4     179            lcall Display_LM335_Temperature
078C            180            ; lcall Display_Thermocouple_Temperature
078C 120536     181            lcall Display_Oven_Temperature
078F            182   
078F C0E0       183            push acc
0791 7401       183            mov a, #1
0793 14         183            dec a
0794 1200C7     183            lcall ?Set_Cursor_1 ; Select column and row
0797 D0E0       183            pop acc
0799 C000       184            push ar0
079B A830       184            mov r0, STATE_NUM
079D 1200CC     184            lcall ?Display_BCD
07A0 D000       184            pop ar0
07A2            185   
07A2 C0E0       186            push acc
07A4 7401       186            mov a, #1
07A6 14         186            dec a
07A7 1200C5     186            lcall ?Set_Cursor_2 ; Select column and row
07AA D0E0       186            pop acc
07AC C000       187            push ar0
07AE A836       187            mov r0, BCD_Counter
07B0 1200CC     187            lcall ?Display_BCD
07B3 D000       187            pop ar0
07B5 C0E0       188            push acc
07B7 7405       188            mov a, #5
07B9 14         188            dec a
07BA 1200C5     188            lcall ?Set_Cursor_2 ; Select column and row
07BD D0E0       188            pop acc
07BF C000       189            push ar0
07C1 A838       189            mov r0, Resulting_Counter
07C3 1200CC     189            lcall ?Display_BCD
07C6 D000       189            pop ar0
07C8            190   
07C8            191            ; lcall Display_SpeakerFlag
07C8 120678     192            lcall Display_BelowFlag
07CB            193   
07CB            194            ; LCALL Display_Output_Voltage
07CB            195   
07CB 22         196            RET
07CC            197   
07CC            198   Check_Buttons:
07CC 20921B     199            jb TENS_BUTTON, onesbutton
07CF 1208C3     200            lcall Wait30ms
07D2 209215     201            jb TENS_BUTTON, onesbutton
07D5            202   
07D5 3092FD     203            jnb TENS_BUTTON, $
07D8 309009     204            jnb MODE_BUTTON, reflowaddten; if MODE BUTTON IS PRESSED, jump
07DB E53E       205            mov a, TEMP_SOAK
07DD 240A       206            add a, #0x0A
07DF F53E       207            mov TEMP_SOAK, a
07E1 0207EA     208            ljmp onesbutton
07E4            209   reflowaddten:
07E4 E53F       210            mov a, TEMP_REFLOW
07E6 240A       211            add a, #0x0A
07E8 F53F       212            mov TEMP_REFLOW, a
07EA            213   onesbutton:
07EA 20961B     214            jb ONES_BUTTON, done_check_button
07ED 1208C3     215            lcall Wait30ms
07F0 209615     216            jb ONES_BUTTON, done_check_button
07F3            217   
07F3 3096FD     218            jnb ONES_BUTTON, $
07F6 309009     219            jnb MODE_BUTTON, reflowaddone; if MODE BUTTON IS PRESSED, jump
07F9 E53E       220            mov a, TEMP_SOAK
07FB 2401       221            add a, #0x01
07FD F53E       222            mov TEMP_SOAK, a
07FF 020808     223            ljmp done_check_button
0802            224   reflowaddone:
0802 E53F       225            mov a, TEMP_REFLOW
0804 2401       226            add a, #0x01
0806 F53F       227            mov TEMP_REFLOW, a
0808            228   done_check_button:
0808 E53F       229            mov a, TEMP_REFLOW
080A 953E       230            subb a, TEMP_SOAK ; if REFLOW - SOAK = + we good
080C 5004       231            jnc done_reflow_and_soak_temp_check ; 
080E E53F       232            mov a, TEMP_REFLOW
0810 F53E       233            mov TEMP_SOAK, a
0812            234   done_reflow_and_soak_temp_check:         
0812 22         235            ret
0813            236   
0813            237   Init_Vars:
0813            238       ; Initial Values at State 0
0813 753000     239            MOV STATE_NUM, #0x00
0816            240   
0816 753D32     241            MOV TEMP_ERROR, #50
0819 753E91     242            MOV TEMP_SOAK, #145
081C 753FD9     243            MOV TEMP_REFLOW, #217
081F            244   
081F 755A00     245            MOV VLED_ADC+0, #0
0822 755B00     246            MOV VLED_ADC+1, #0
0825            247   
0825 755C00     248            MOV LM335_TEMP+0, #0
0828 755D00     249            MOV LM335_TEMP+1, #0
082B            250   
082B 756000     251            MOV THERMOCOUPLE_TEMP+0, #0
082E 756100     252            MOV THERMOCOUPLE_TEMP+1, #0
0831            253   Reset_Vars:
0831 753600     254            MOV BCD_Counter, #0x00
0834 753800     255            MOV Resulting_Counter, #0x00
0837 753B00     256       MOV Desired_PWM+0, #0x00
083A 753C00     257       MOV Desired_PWM+1, #0x00
083D            258   
083D 753500     259            mov speaker_counts, #0x00
0840 753300     260            mov speaker_counter1ms, #0x00
0843 753400     261            mov speaker_counter1ms+1, #0x00
0846            262   
0846 C295       263       clr OUTPUT_PIN
0848 D284       264            SETB START_BUTTON
084A D292       265            setb TENS_BUTTON
084C D296       266            setb ONES_BUTTON
084E D290       267            setb MODE_BUTTON
0850 C201       268            CLR Below_Temp_Flag
0852 C202       269            CLR Error_Triggered_Flag
0854            270   
0854 22         271            RET
0855            272   
0855            273   Timer0_ISR:
0855            274            ; Save Registers to Stack.
0855 C0E0       275       PUSH ACC
0857 C0D0       276            PUSH PSW
0859            277   
0859            278            
0859 C28C       279            CLR TR0
085B 758CF0     280            MOV TH0, #HIGH(TIMER0_RELOAD)
085E 758A2C     281            MOV TL0, #LOW(TIMER0_RELOAD)
0861 D28C       282            SETB TR0
0863            283   
0863 B285       284            CPL SPEAKER_OUT ; Toggle the Alarm Out Pin
0865 D0D0       285            POP PSW
0867 D0E0       286            POP ACC
0869            287   
0869 32         288            RETI
086A            289   ;-------------;
086A            290   ; Timer 2 ISR ;
086A            291   ;-------------;
086A            292   
086A            293   Timer2_ISR:
086A C2CF       294            CLR TF2  ; Timer 2 Doesn't Clear TF2 Automatically. Do it in the ISR.  It is Bit Addressable.
086C            295   
086C            296            ; Save Registers to Stack
086C C0E0       297            PUSH ACC
086E C0D0       298            PUSH PSW
0870            299   
0870            300            ; Increment 16-bit 1ms Counter.
0870 0531       301            INC Count1ms+0 ; Increment Low 8-bits
0872 E531       302            MOV a, Count1ms+0 ; Increment High 8-bits if Lower 8-bits Overflow
0874 7002       303            JNZ Inc_Done
0876 0532       304            INC Count1ms+1
0878            305   Inc_Done:
0878            306            
0878 E539       307            MOV A, Timer_State
087A B40103     308            CJNE A, #0x01, Continue ; Jump If Not In Timer State
087D 120652     309            LCALL Inc_PWM
0880            310   Continue:
0880            311            ; Check If oNE Second Has Passed
0880 E531       312            MOV A, Count1ms+0
0882 B4E839     313            CJNE A, #LOW(1000), Timer2_ISR_Done
0885 E532       314            MOV A, Count1ms+1
0887 B40334     315            CJNE A, #HIGH(1000), Timer2_ISR_Done
088A            316   
088A 1205F7     317            LCALL TX_Temp_Oven
088D E4         318            CLR A
088E F531       319            MOV Count1ms+0, A
0890 F532       320            MOV Count1ms+1, A
0892            321            ; Increment the BCD counter
0892            322   
0892 B28C       323            cpl TR0
0894 E536       324            MOV A, BCD_Counter
0896 2401       325            ADD A, #0x01
0898 D4         326            DA A
0899 F536       327            MOV BCD_Counter, A
089B            328   
089B            329   
089B F536       330       MOV BCD_Counter, A
089D B5381E     331            CJNE A, Resulting_Counter, Timer2_ISR_Done ; Skip if BCD_Counter != Resulting_Counter
08A0 E539       332            MOV A, Timer_State
08A2 B40119     333       CJNE A, #0x01, Timer2_ISR_Done; Skip If We're Not In Timer State
08A5            334   
08A5 E530       335            MOV A, STATE_NUM
08A7 B4010F     336            CJNE A, #0x01, OtherStates ; Skip If Not State 1
08AA            337   
08AA            338   Check_Error_State:
08AA            339            ; Check If Oven Temperature < 50
08AA 120642     340            LCALL Check_Temp_Error
08AD 30020E     341            JNB Error_Triggered_Flag, Timer2_ISR_Done ; Skip If Oven Temperature <= 50      
08B0            342   Error_State_Triggered:
08B0            343            ;CLR Error_Triggered_Flag
08B0 753000     344            MOV STATE_NUM, #0x00
08B3 753600     345            MOV BCD_Counter, #0x00
08B6            346   
08B6 0208BE     347            LJMP Timer2_ISR_Done
08B9            348   OtherStates:
08B9 753600     349            MOV BCD_Counter, #0x00
08BC 0530       350            INC STATE_NUM ; Increment State Number
08BE            351   Timer2_ISR_Done:
08BE D0D0       352            POP PSW
08C0 D0E0       353            POP ACC
08C2 32         354            RETI
08C3            355   
08C3            356   
08C3            357   
08C3            358   Wait30ms:
08C3 7A06       359       MOV R2, #6
08C5 79C8       360   W3: MOV R1, #200
08C7 7868       361   W2: MOV R0, #104
08C9 D8FE       362   W1: djnz R0, W1 ; 4 cycles-> 4 * 60.285ns * 104 = 25us
08CB D9FA       363       djnz R1, W2 ; 25us * 200 = 5.0ms
08CD DAF6       364       djnz R2, W3 ; 5.0ms * 6 = 30ms (Approximately)
08CF 22         365       RET
08D0            366   
08D0            367   StateChanges: ; Check What Counter Number Will Be For Each State
08D0 E530       368            MOV A, STATE_NUM
08D2 B40006     369            CJNE A, #0x00, Next1 ; Jump to Next1 if STATE_NUM is NOT 0
08D5            370   
08D5 12090E     371            LCALL State0
08D8 02090D     372            LJMP Done_State_Counter
08DB            373   Next1:
08DB E530       374            MOV A, STATE_NUM
08DD B40106     375            CJNE A, #0x01, Next2 ; Jump to Next2 if STATE_NUM is NOT 1
08E0            376   
08E0 12092C     377            LCALL State1
08E3 02090D     378            LJMP Done_State_Counter
08E6            379   Next2:
08E6 E530       380            MOV A, STATE_NUM
08E8 B40206     381            CJNE A, #0x02, Next3 ; Jump to Next3 if STATE_NUM is NOT 2
08EB            382   
08EB 120943     383            LCALL State2
08EE 02090D     384            LJMP Done_State_Counter
08F1            385   Next3:
08F1 E530       386            MOV a, STATE_NUM
08F3 B40306     387            CJNE a, #0x03, Next4 ; Jump to Next4 if STATE_NUM is NOT 3
08F6            388   
08F6 12094A     389            LCALL State3
08F9 02090D     390            LJMP Done_State_Counter
08FC            391   Next4:
08FC E530       392            MOV A, STATE_NUM
08FE B40406     393            CJNE A, #0x04, Next5 ; Jump to Next5 if STATE_NUM is NOT 4
0901            394   
0901 120964     395            LCALL State4
0904 02090D     396            LJMP Done_State_Counter
0907            397   Next5:
0907 12096B     398            LCALL State5
090A 02090D     399            LJMP Done_State_Counter
090D            400   
090D            401   Done_State_Counter:
090D 22         402            RET
090E            403   
090E            404   State0:
090E            405   
090E 753900     406       MOV Timer_State, #0x00
0911 12066B     407       LCALL Power0
0914 1207CC     408            LCALL Check_Buttons
0917            409   
0917 208411     410            JB START_BUTTON, Quit0 ; Go to Quit0 If Start Button is NOT Pressed
091A 1208C3     411            LCALL Wait30ms
091D 20840B     412            JB START_BUTTON, Quit0
0920            413   
0920            414            
0920 3084FD     415            JNB START_BUTTON, $ ; Go to State1 If Start Button is Pressed
0923 753600     416            MOV BCD_Counter, #0x00
0926 753860     417            MOV Resulting_Counter, #0x60
0929 0530       418            INC STATE_NUM
092B            419            ;setb TR0
092B            420   Quit0:
092B 22         421            RET
092C            422   
092C            423   State1:
092C 753901     424       MOV Timer_State, #0x01
092F 12066E     425       LCALL Power100
0932            426            
0932 A93E       427            MOV R1, TEMP_SOAK
0934 120636     428            LCALL Check_Temp_Oven ; Check If Oven Temperature Reaches 150
0937 200108     429            JB Below_Temp_Flag, Quit1 ; If Temperature Below then jump to quit1
093A            430   
093A            431            ;CLR Below_Temp_Flag
093A 753600     432            MOV BCD_Counter, #0x00
093D 753890     433            MOV Resulting_Counter, #0x90
0940 0530       434            INC STATE_NUM
0942            435   Quit1:
0942 22         436            RET
0943            437   
0943            438   State2:
0943 120671     439       LCALL Power20 ; Set Power to 20%
0946 753901     440       MOV Timer_State, #0x01
0949            441       
0949            442   Quit2:
0949 22         443            RET
094A            444   
094A            445   State3:
094A 12066E     446       LCALL Power100 ; Set Power to 100%
094D 753900     447       MOV Timer_State, #0x00
0950            448   
0950 A93F       449            MOV R1, TEMP_REFLOW
0952 120636     450            LCALL Check_Temp_Oven
0955 20010B     451            JB Below_Temp_Flag, Quit3
0958            452            
0958            453            ;CLR Below_Temp_Flag    
0958 753901     454       MOV Timer_State, #0x01
095B 753600     455            MOV BCD_Counter, #0x00
095E 753860     456            MOV Resulting_Counter, #0x60
0961 0530       457            INC STATE_NUM
0963            458   Quit3:
0963 22         459            RET
0964            460   
0964            461   State4:
0964 120671     462       LCALL Power20
0967 753901     463       MOV Timer_State, #0x01
096A            464       ;JB START_BUTTON, Quit4 ; if START BUTTON is NOT PRESSED
096A            465            ;LCALL Wait30ms
096A            466            ;JB START_BUTTON, Quit4
096A            467   
096A            468            ;JNB START_BUTTON, $ ; if START BUTTON is PRESSED go to State1
096A            469            ;MOV BCD_Counter, #0x00
096A            470   Quit4:
096A 22         471            RET
096B            472   
096B            473   State5:
096B 12066B     474       LCALL Power0
096E 753900     475       MOV Timer_State, #0x00
0971            476   
0971 793C       477            MOV R1, #TEMP_DONE
0973 120636     478            LCALL Check_Temp_Oven ; Check If Oven Temperature Reaches 60
0976 300108     479            JNB Below_Temp_Flag, Quit5  ; IF temperature >= 60, continue in state 5 (0 is above value)
0979            480   
0979 C201       481            CLR Below_Temp_Flag
097B 753000     482            MOV STATE_NUM, #0x00
097E 753600     483            MOV BCD_Counter, #0x00
0981            484   Quit5:
0981 22         485            RET
0982            486   
0982            487   ;----------------;
0982            488   ; Initialization ;
0982            489   ;----------------;
0982            490   Init_All:
0982 75AC00     491            MOV     P3M1, #0X00
0985 75AD00     492            MOV     P3M2, #0X00
0988            493   
0988 75B300     494            MOV     P1M1, #0X00
098B 75B400     495            MOV     P1M2, #0X00
098E            496   
098E 75B100     497            MOV     P0M1, #0X00
0991 75B200     498            MOV     P0M2, #0X00
0994            499   
0994 C0E0       500            push acc
0996 7401       500            mov a, #1
0998 14         500            dec a
0999 1200C7     500            lcall ?Set_Cursor_1 ; Select column and row
099C D0E0       500            pop acc
099E C083       501            push dph
09A0 C082       501            push dpl
09A2 C0E0       501            push acc
09A4 9006E1     501            mov dptr, #Initial_Message1
09A7 1200BA     501            lcall ?Send_Constant_String
09AA D0E0       501            pop acc
09AC D082       501            pop dpl
09AE D083       501            pop dph
09B0 C0E0       502            push acc
09B2 7401       502            mov a, #1
09B4 14         502            dec a
09B5 1200C5     502            lcall ?Set_Cursor_2 ; Select column and row
09B8 D0E0       502            pop acc
09BA C083       503            push dph
09BC C082       503            push dpl
09BE C0E0       503            push acc
09C0 9006F2     503            mov dptr, #Initial_Message2
09C3 1200BA     503            lcall ?Send_Constant_String
09C6 D0E0       503            pop acc
09C8 D082       503            pop dpl
09CA D083       503            pop dph
09CC            504   
09CC 120813     505            LCALL Init_Vars
09CF            506   Init_SerialPort:
09CF            507       ; Configure Serial Port and Baud Rate
09CF            508   
09CF            509       ; Since Reset Button Bounces, Wait a Bit Before Sending Messages.
09CF            510       ; Otherwise, We Risk Sending Garbage to the Serial Port.
09CF 79C8       511       MOV R1, #200
09D1 7868       512       MOV R0, #104
09D3 D8FE       513       DJNZ R0, $ ; 4 Cycles-> 4 * 60.285 ns * 104 = 25 us
09D5 D9FA       514       DJNZ R1, $-4 ; 25us * 200 = 5 ms
09D7            515   
09D7            516   Timer0_Init:
09D7 438E08     517            ORL CKCON, #0B0000_1000 ; Input for Timer 0 is SYSCLK/1.
09DA            518   
09DA E589       519            MOV A, TMOD
09DC 54F0       520            ANL A, #0XF0 ; 1111_0000 Clear Bits for Timer 0
09DE 4401       521            ORL A, #0X01 ; 0000_0001 Configure Timer 0 as 16-Timer
09E0 F589       522            MOV TMOD, A
09E2            523   
09E2 758CF0     524            MOV TH0, #HIGH(TIMER0_RELOAD)
09E5 758A2C     525            MOV TL0, #LOW(TIMER0_RELOAD)
09E8            526   
09E8            527            ; Enable Timer and Interrupts
09E8 D2A9       528       SETB ET0  ; Enable Timer 0 Interrupt
09EA D28C       529            setb TR0
09EC            530   Init_Timer1:
09EC 438E10     531            ORL     CKCON, #0X10 ; CLK is Input for Timer 1.
09EF 438780     532            ORL     PCON, #0X80 ; Bit SMOD = 1, Double Baud Rate
09F2 759852     533            MOV     SCON, #0X52
09F5 53C4DF     534            ANL     T3CON, #0B1101_1111
09F8 53890F     535            ANL     TMOD, #0X0F ; Clear Configuration Bits for Timer 1
09FB 438920     536            ORL     TMOD, #0X20 ; Timer 1 Mode 2
09FE 758DF7     537            MOV     TH1, #TIMER1_RELOAD ; TH1 = TIMER1_RELOAD;
0A01 D28E       538            SETB TR1
0A03            539   Init_ADC:
0A03            540            ; Initialize the pins used by the ADC (P1.1, P1.7, P3.0) as Analog Inputs
0A03 43B382     541            ORL     P1M1, #0B1000_0010
0A06 53B47D     542            ANL     P1M2, #0B0111_1101
0A09 43AC02     543            ORL     P3M1, #0B0000_0010
0A0C 53ADFD     544            ANL P3M2, #0B1111_1101
0A0F            545   
0A0F            546            ; AINDIDS Select if Some Pins are Analog Inputs or Digital I/O
0A0F 75F600     547            MOV AINDIDS, #0X00 ; Disable All Analog Inputs
0A12 43F683     548            ORL AINDIDS, #0B1000_0011 ; Activate AIN0, AIN1, AIN7
0A15            549   
0A15 43E101     550            ORL ADCCON1, #0X01 ; Enable ADC
0A18            551   Init_Timer2:
0A18 75C800     552            MOV T2CON, #0 ; Stop Timer. Autoreload Mode.
0A1B 75CDBF     553            MOV TH2, #HIGH(TIMER2_RELOAD)
0A1E 75CC28     554            MOV TL2, #LOW(TIMER2_RELOAD)
0A21            555   
0A21            556            ; Set Reload Value
0A21 43C980     557            ORL T2MOD, #0X80 ; Enable Timer 2 Autoreload Mode
0A24 75CBBF     558            MOV RCMP2H, #HIGH(TIMER2_RELOAD)
0A27 75CA28     559            MOV RCMP2L, #LOW(TIMER2_RELOAD)
0A2A            560   
0A2A            561            ; Init 1ms Interrupt Counter. 16-bit Variable with Two 8-bit Parts.
0A2A E4         562            CLR A
0A2B F531       563            MOV Count1ms+0, A
0A2D F532       564            MOV Count1ms+1, A
0A2F            565   
0A2F            566            ; Enable the Timer and Interrupts.
0A2F 439B80     567            ORL EIE, #0X80 ; Enable Timer 2 Interrupt ET2=1
0A32 D2CA       568       SETB TR2  ; Enable Timer 2
0A34 22         569       RET
0A35            570   
0A35            571   Main:
0A35            572            ; Initialization
0A35 75817F     573            MOV SP, #0X7F
0A38 D2AF       574       SETB EA   ; Enable Global interrupts
0A3A 120982     575            LCALL Init_All
0A3D 120087     576            LCALL LCD_4BIT
0A40            577   Forever:
0A40 120626     578            LCALL Get_and_Transmit_Temp
0A43 120789     579            LCALL Display_LCDTest
0A46            580            ;LCALL Display_LCD
0A46 1208D0     581            LCALL StateChanges
0A49            582   
0A49 020A40     583            LJMP Forever
0A4C            584   
0A4C            585   EN
